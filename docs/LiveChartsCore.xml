<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiveChartsCore</name>
    </assembly>
    <members>
        <member name="T:LiveChartsCore.Axis`3">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TTextGeometry">The type of the text geometry.</typeparam>
            <typeparam name="TLineGeometry">The type of the line geometry.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IAxis`1" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:LiveChartsCore.Axis`3.subscribedTo">
            <summary>
            Get a <see cref="T:System.Collections.Generic.HashSet`1"/> reference to the charts that are subscribed to this axis.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Axis`3.deletingTasks">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.HashSet`1"/> reference to the pending to delete paint tasks.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Axis`3.activeSeparators">
            <summary>
            The active separators
            </summary>
        </member>
        <member name="P:LiveChartsCore.Axis`3.Orientation">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.Orientation"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.Padding">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.Padding"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.Labeler">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.Labeler"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.MinStep">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.MinStep"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.MinLimit">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.MinLimit"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.MaxLimit">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.MaxLimit"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.UnitWidth">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.UnitWidth"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.Position">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.Position"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.LabelsRotation">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.LabelsRotation"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.TextSize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.TextSize"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.Labels">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.Labels"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.ShowSeparatorLines">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.ShowSeparatorLines"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.IsVisible">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.IsVisible"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.IsInverted">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.IsInverted"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.TextBrush">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis`1.TextBrush"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.SeparatorsBrush">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis`1.SeparatorsBrush"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.AnimationsSpeed">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.AnimationsSpeed"/>
        </member>
        <member name="P:LiveChartsCore.Axis`3.EasingFunction">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IAxis.EasingFunction"/>
        </member>
        <member name="E:LiveChartsCore.Axis`3.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Axis`3.Measure(LiveChartsCore.CartesianChart{`0})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IAxis`1.Measure(LiveChartsCore.CartesianChart{`0})"/>
        </member>
        <member name="M:LiveChartsCore.Axis`3.GetPossibleSize(LiveChartsCore.CartesianChart{`0})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IAxis`1.GetPossibleSize(LiveChartsCore.CartesianChart{`0})"/>
        </member>
        <member name="M:LiveChartsCore.Axis`3.Initialize(LiveChartsCore.Measure.AxisOrientation)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IAxis.Initialize(LiveChartsCore.Measure.AxisOrientation)"/>
        </member>
        <member name="M:LiveChartsCore.Axis`3.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:LiveChartsCore.Axis`3.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Axis`3.SoftDeleteSeparator(LiveChartsCore.Chart{`0},LiveChartsCore.Drawing.AxisVisualSeprator{`0},LiveChartsCore.Measure.Scaler)">
            <summary>
            Softly deletes the separator.
            </summary>
            <param name="chart">The chart.</param>
            <param name="separator">The separator.</param>
            <param name="scale">The scale.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.BarSeries`4">
            <summary>
            Defines a bar series point.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.CartesianSeries`4" />
            <seealso cref="T:LiveChartsCore.Kernel.IBarSeries`1" />
        </member>
        <member name="M:LiveChartsCore.BarSeries`4.#ctor(LiveChartsCore.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.BarSeries`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:LiveChartsCore.BarSeries`4.GroupPadding">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IBarSeries`1.GroupPadding"/>
        </member>
        <member name="P:LiveChartsCore.BarSeries`4.MaxBarWidth">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IBarSeries`1.MaxBarWidth"/>
        </member>
        <member name="P:LiveChartsCore.BarSeries`4.IgnoresBarPosition">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IBarSeries`1.IgnoresBarPosition"/>
        </member>
        <member name="P:LiveChartsCore.BarSeries`4.Rx">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IBarSeries`1.Rx"/>
        </member>
        <member name="P:LiveChartsCore.BarSeries`4.Ry">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IBarSeries`1.Ry"/>
        </member>
        <member name="M:LiveChartsCore.BarSeries`4.OnPaintContextChanged">
            <summary>
            Called when the paint context changes.
            </summary>
        </member>
        <member name="T:LiveChartsCore.CartesianChart`1">
            <summary>
            Defines a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Chart`1" />
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.#ctor(LiveChartsCore.Kernel.ICartesianChartView{`0},System.Action{LiveChartsCore.Kernel.LiveChartsSettings},LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.CartesianChart`1"/> class.
            </summary>
            <param name="view">The view.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="P:LiveChartsCore.CartesianChart`1.XAxes">
            <summary>
            Gets the x axes.
            </summary>
            <value>
            The x axes.
            </value>
        </member>
        <member name="P:LiveChartsCore.CartesianChart`1.YAxes">
            <summary>
            Gets the y axes.
            </summary>
            <value>
            The y axes.
            </value>
        </member>
        <member name="P:LiveChartsCore.CartesianChart`1.Series">
            <summary>
            Gets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveChartsCore.CartesianChart`1.DrawableSeries">
            <summary>
            Gets the drawable series.
            </summary>
            <value>
            The drawable series.
            </value>
        </member>
        <member name="P:LiveChartsCore.CartesianChart`1.IsZoomingOrPanning">
            <summary>
            Gets or sets a value indicating whether this instance is zooming or panning.
            </summary>
            <value>
              <c>true</c> if this instance is zooming or panning; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.CartesianChart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.Update(LiveChartsCore.Kernel.ChartUpdateParams)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IChart.Update(LiveChartsCore.Kernel.ChartUpdateParams)" />
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.FindPointsNearTo(System.Drawing.PointF)">
            <summary>
            Finds the points near to the specified location.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.ScaleUIPoint(System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Scales the specified point to the UI.
            </summary>
            <param name="point">The point.</param>
            <param name="xAxisIndex">Index of the x axis.</param>
            <param name="yAxisIndex">Index of the y axis.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.Zoom(System.Drawing.PointF,LiveChartsCore.Measure.ZoomDirection)">
            <summary>
            Zooms to the specified pivot.
            </summary>
            <param name="pivot">The pivot.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.Pan(System.Drawing.PointF)">
            <summary>
            Pans with the specified delta.
            </summary>
            <param name="delta">The delta.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.CartesianChart`1.UpdateThrottlerUnlocked">
            <summary>
            Called when the updated the throttler is unlocked.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.CartesianSeries`4">
            <summary>
            Defines a Cartesian series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.DrawableSeries`4" />
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:LiveChartsCore.Kernel.ICartesianSeries`1" />
        </member>
        <member name="M:LiveChartsCore.CartesianSeries`4.#ctor(LiveChartsCore.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.CartesianSeries`4"/> class.
            </summary>
            <param name="properties">The series properties.</param>
        </member>
        <member name="P:LiveChartsCore.CartesianSeries`4.ScalesXAt">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ICartesianSeries`1.ScalesXAt"/>
        </member>
        <member name="P:LiveChartsCore.CartesianSeries`4.ScalesYAt">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ICartesianSeries`1.ScalesYAt"/>
        </member>
        <member name="P:LiveChartsCore.CartesianSeries`4.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="M:LiveChartsCore.CartesianSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.ICartesianSeries`1.GetBounds(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})"/>
        </member>
        <member name="M:LiveChartsCore.CartesianSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.ICartesianSeries`1.Measure(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})"/>
        </member>
        <member name="M:LiveChartsCore.CartesianSeries`4.Delete(LiveChartsCore.Kernel.IChartView)">
            <summary>
            Deletes the series from the user interface.
            </summary>
            <param name="chart"></param>
            <inheritdoc cref="M:LiveChartsCore.ISeries.Delete(LiveChartsCore.Kernel.IChartView)" />
        </member>
        <member name="M:LiveChartsCore.CartesianSeries`4.GetLabelPosition(System.Single,System.Single,System.Single,System.Single,System.Drawing.SizeF,LiveChartsCore.Measure.DataLabelsPosition,LiveChartsCore.Kernel.SeriesProperties,System.Boolean)">
            <summary>
            Gets the label position.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="labelSize">Size of the label.</param>
            <param name="position">The position.</param>
            <param name="seriesProperties">The series properties.</param>
            <param name="isGreaterThanPivot">if set to <c>true</c> [is greater than pivot].</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Chart`1">
            <summary>
            Defines a chart,
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IChart" />
        </member>
        <member name="F:LiveChartsCore.Chart`1.seriesContext">
            <summary>
            The series context
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.canvas">
            <summary>
            The canvas
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.updateThrottler">
            <summary>
            The update throttler
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.controlSize">
            <summary>
            The control size
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.viewDrawMargin">
            <summary>
            The view draw margin
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.legendPosition">
            <summary>
            The legend position
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.legendOrientation">
            <summary>
            The legend orientation
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.legend">
            <summary>
            The legend
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.tooltipPosition">
            <summary>
            The tool tip position
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.tooltipFindingStrategy">
            <summary>
            The tool tip finding strategy
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.tooltip">
            <summary>
            The tool tip
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.animationsSpeed">
            <summary>
            The animations speed
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.easingFunction">
            <summary>
            The easing function
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.drawMarginSize">
            <summary>
            The draw margin size
            </summary>
        </member>
        <member name="F:LiveChartsCore.Chart`1.drawMarginLocation">
            <summary>
            The draw margin location
            </summary>
        </member>
        <member name="M:LiveChartsCore.Chart`1.#ctor(LiveChartsCore.Drawing.MotionCanvas{`0},System.Action{LiveChartsCore.Kernel.LiveChartsSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Chart`1"/> class.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
        </member>
        <member name="E:LiveChartsCore.Chart`1.Measuring">
            <inheritdoc cref="E:LiveChartsCore.Kernel.IChartView`1.Measuring" />
        </member>
        <member name="E:LiveChartsCore.Chart`1.UpdateStarted">
            <inheritdoc cref="E:LiveChartsCore.Kernel.IChartView`1.UpdateStarted" />
        </member>
        <member name="E:LiveChartsCore.Chart`1.UpdateFinished">
            <inheritdoc cref="E:LiveChartsCore.Kernel.IChartView`1.UpdateFinished" />
        </member>
        <member name="P:LiveChartsCore.Chart`1.MeasureWork">
            <summary>
            Gets the measure work.
            </summary>
            <value>
            The measure work.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.ThemeId">
            <summary>
            Gets or sets the theme identifier.
            </summary>
            <value>
            The theme identifier.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.IsFirstDraw">
            <summary>
            Gets or sets a value indicating whether this it is the first draw of this instance.
            </summary>
            <value>
              <c>true</c> if this it is the first draw; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.SeriesContext">
            <summary>
            Gets the series context.
            </summary>
            <value>
            The series context.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.Canvas">
            <summary>
            Gets the canvas.
            </summary>
            <value>
            The canvas.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.DrawableSeries">
            <summary>
            Gets the drawable series.
            </summary>
            <value>
            The drawable series.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.ControlSize">
            <summary>
            Gets the size of the control.
            </summary>
            <value>
            The size of the control.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.DrawMarginLocation">
            <summary>
            Gets the draw margin location.
            </summary>
            <value>
            The draw margin location.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.DrawMarginSize">
            <summary>
            Gets the size of the draw margin.
            </summary>
            <value>
            The size of the draw margin.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.LegendPosition">
            <summary>
            Gets the legend position.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.LegendOrientation">
            <summary>
            Gets the legend orientation.
            </summary>
            <value>
            The legend orientation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.Legend">
            <summary>
            Gets the legend.
            </summary>
            <value>
            The legend.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.TooltipPosition">
            <summary>
            Gets the tooltip position.
            </summary>
            <value>
            The tooltip position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.TooltipFindingStrategy">
            <summary>
            Gets the tooltip finding strategy.
            </summary>
            <value>
            The tooltip finding strategy.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.Tooltip">
            <summary>
            Gets the tooltip.
            </summary>
            <value>
            The tooltip.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.AnimationsSpeed">
            <summary>
            Gets the animations speed.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:LiveChartsCore.Chart`1.EasingFunction">
            <summary>
            Gets the easing function.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="M:LiveChartsCore.Chart`1.Update(LiveChartsCore.Kernel.ChartUpdateParams)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IChart.Update(LiveChartsCore.Kernel.ChartUpdateParams)" />
        </member>
        <member name="M:LiveChartsCore.Chart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Chart`1.UpdateThrottlerUnlocked">
            <summary>
            Called when the updated the throttler is unlocked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Chart`1.FindPointsNearTo(System.Drawing.PointF)">
            <summary>
            Finds the points near to the specified point.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Chart`1.SetDrawMargin(System.Drawing.SizeF,LiveChartsCore.Measure.Margin)">
            <summary>
            Sets the draw margin.
            </summary>
            <param name="controlSize">Size of the control.</param>
            <param name="margin">The margin.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Chart`1.InvokeOnMeasuring">
            <summary>
            Invokes the <see cref="E:LiveChartsCore.Chart`1.Measuring"/> event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Chart`1.InvokeOnUpdateStarted">
            <summary>
            Invokes the on update started.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Chart`1.InvokeOnUpdateFinished">
            <summary>
            Invokes the on update finished.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Collections.RangeObservableCollection`1">
            <summary>
            Implementation of a dynamic data collection based on generic Collection&lt;T&gt;,
            implementing INotifyCollectionChanged to notify listeners
            when items get added, removed or the whole list is refreshed.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of ObservableCollection that is empty and has default initial capacity.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the ObservableCollection class that contains
            elements copied from the specified collection and has sufficient capacity
            to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <remarks>
            The elements are copied onto the ObservableCollection in the
            same order they are read by the enumerator of the collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException"> collection is a null reference </exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the ObservableCollection class
            that contains elements copied from the specified list
            </summary>
            <param name="list">The list whose elements are copied to the new list.</param>
            <remarks>
            The elements are copied onto the ObservableCollection in the
            same order they are read by the enumerator of the list.
            </remarks>
            <exception cref="T:System.ArgumentNullException"> list is a null reference </exception>
        </member>
        <member name="P:LiveChartsCore.Collections.RangeObservableCollection`1.Comparer">
            <summary>
            ...
            </summary>
        </member>
        <member name="P:LiveChartsCore.Collections.RangeObservableCollection`1.AllowDuplicates">
            <summary>
            Gets or sets a value indicating whether this collection acts as a <see cref="T:System.Collections.Generic.HashSet`1"/>,
            disallowing duplicate items, based on <see cref="P:LiveChartsCore.Collections.RangeObservableCollection`1.Comparer"/>.
            This might indeed consume background performance, but in the other hand,
            it will pay off in UI performance as less required UI updates are required.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <param name="collection">
            The collection whose elements should be added to the end of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the list.
            The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not in the collection range.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Removes the first occurrence of each item in the specified collection from the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <param name="collection">The items to remove.</param>        
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Iterates over the collection and removes all items that satisfy the specified match.
            </summary>
            <remarks>The complexity is O(n).</remarks>
            <param name="match"></param>
            <returns>Returns the number of elements that where </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="match"/> is null.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.RemoveAll(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>
            Iterates over the specified range within the collection and removes all items that satisfy the specified match.
            </summary>
            <remarks>The complexity is O(n).</remarks>
            <param name="index">The index of where to start performing the search.</param>
            <param name="count">The number of items to iterate on.</param>
            <param name="match"></param>
            <returns>Returns the number of elements that where </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count"/> is out of range.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="match"/> is null.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>>.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified range is exceeding the collection.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.ReplaceRange(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Clears the current collection and replaces it with the specified collection,
            using <see cref="P:LiveChartsCore.Collections.RangeObservableCollection`1.Comparer"/>.
            </summary>             
            <param name="collection">The items to fill the collection with, after clearing it.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.ReplaceRange(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes the specified range and inserts the specified collection in its position, leaving equal items in equal positions intact.
            </summary>
            <param name="index">The index of where to start the replacement.</param>
            <param name="count">The number of items to be replaced.</param>
            <param name="collection">The collection to insert in that location.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count"/> is out of range.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.ClearItems">
            <summary>
            Called by base class Collection&lt;T&gt; when the list is being cleared;
            raises a CollectionChanged event to any listeners.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.InsertItem(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.SetItem(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise CollectionChanged event to any listeners.
            Properties/methods modifying this ObservableCollection will raise
            a collection changed event through this virtual method.
            </summary>
            <remarks>
            When overriding this method, either call its base implementation
            </remarks>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.DeferEvents">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.OnEssentialPropertiesChanged">
            <summary>
            Helper to raise Count property and the Indexer property.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.OnIndexerPropertyChanged">
            <summary>
            /// Helper to raise a PropertyChanged event for the Indexer property
            /// </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Helper to raise CollectionChanged event to any listeners
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.OnCollectionReset">
            <summary>
            Helper to raise CollectionChanged event with action == Reset to any listeners
            </summary>
        </member>
        <member name="M:LiveChartsCore.Collections.RangeObservableCollection`1.OnRangeReplaced(System.Int32,System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`0})">
            <summary>
            Helper to raise event for clustered action and clear cluster.
            </summary>
            <param name="followingItemIndex">The index of the item following the replacement block.</param>
            <param name="newCluster"></param>
            <param name="oldCluster"></param>
        </member>
        <member name="T:LiveChartsCore.Collections.EventArgsCache">
            <remarks>
            To be kept outside <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>, since otherwise, a new instance will be created for each generic type used.
            </remarks>
        </member>
        <member name="T:LiveChartsCore.ColumnSeries`4">
            <summary>
            Defines a column series.
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TVisual"></typeparam>
            <typeparam name="TLabel"></typeparam>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="M:LiveChartsCore.ColumnSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.ColumnSeries`4"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.ColumnSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.ICartesianSeries`1.Measure(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})"/>
        </member>
        <member name="M:LiveChartsCore.ColumnSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.ICartesianSeries`1.GetBounds(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})"/>
        </member>
        <member name="M:LiveChartsCore.ColumnSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)"/>
        </member>
        <member name="M:LiveChartsCore.ColumnSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)"/>
        </member>
        <member name="T:LiveChartsCore.Defaults.DateTimePoint">
            <summary>
            Defines a date time point for the Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.DateTimePoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.DateTimePoint"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.DateTimePoint.#ctor(System.DateTime,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.DateTimePoint"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.DateTimePoint.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.DateTimePoint.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.DateTimePoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.DateTimePoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.DateTimePointF">
            <summary>
            Defines a date time point for the Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.DateTimePointF.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.DateTimePoint"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.DateTimePointF.#ctor(System.DateTime,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.DateTimePoint"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.DateTimePointF.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.DateTimePointF.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.DateTimePointF.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.DateTimePointF.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.ObservablePoint">
            <summary>
            Defines a point for the Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservablePoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservablePoint"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservablePoint.#ctor(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservablePoint"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.ObservablePoint.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.ObservablePoint.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.ObservablePoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservablePoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.ObservablePointF">
            <summary>
            Defines a point for he Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservablePointF.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservablePointF"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservablePointF.#ctor(System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservablePointF"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.ObservablePointF.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.ObservablePointF.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.ObservablePointF.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservablePointF.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.ObservableValue">
            <summary>
            Defines an object that notifies when the value property changes.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservableValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservableValue"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservableValue.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservableValue"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.ObservableValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.ObservableValue.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservableValue.OnPropertyChanged(System.String)">
            <summary>
            Called when am property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.ObservableValueF">
            <summary>
            Defines an object that notifies when the value property changes.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservableValueF.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservableValueF"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservableValueF.#ctor(System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.ObservableValueF"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.ObservableValueF.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.ObservableValueF.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.ObservableValueF.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.WeightedPoint">
            <summary>
            Defines a point with a weighted coordinate.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:LiveChartsCore.Defaults.WeightedPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.WeightedPoint"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.WeightedPoint.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.WeightedPoint"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="weight">The weight.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.WeightedPoint.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.WeightedPoint.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.WeightedPoint.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.WeightedPoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.WeightedPoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.Defaults.WeightedPointF">
            <summary>
            Defines a point with a weighted coordinate.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:LiveChartsCore.Defaults.WeightedPointF.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.WeightedPointF"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Defaults.WeightedPointF.#ctor(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Defaults.WeightedPointF"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="weight">The weight.</param>
        </member>
        <member name="P:LiveChartsCore.Defaults.WeightedPointF.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.WeightedPointF.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="P:LiveChartsCore.Defaults.WeightedPointF.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="E:LiveChartsCore.Defaults.WeightedPointF.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Defaults.WeightedPointF.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:LiveChartsCore.DrawableSeries`4">
            <summary>
            Defines a data series that has at least a <see cref="T:LiveChartsCore.Drawing.IDrawableTask`1"/> to draw the data in the user interface.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Series`4" />
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="F:LiveChartsCore.DrawableSeries`4.paintContext">
            <summary>
            The paint context.
            </summary>
        </member>
        <member name="F:LiveChartsCore.DrawableSeries`4.deletingTasks">
            <summary>
            The pending to delete tasks.
            </summary>
        </member>
        <member name="M:LiveChartsCore.DrawableSeries`4.#ctor(LiveChartsCore.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.DrawableSeries`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.DataLabelsDrawableTask">
            <summary>
            Gets or sets the data labels drawable task.
            </summary>
            <value>
            The data labels drawable task.
            </value>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.DataLabelsSize">
            <summary>
            Gets or sets the size of the data labels.
            </summary>
            <value>
            The size of the data labels.
            </value>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.DataLabelsPadding">
            <summary>
            Gets or sets the data labels padding.
            </summary>
            <value>
            The data labels padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.DefaultPaintContext">
            <summary>
            Gets the default paint context.
            </summary>
            <value>
            The default paint context.
            </value>
        </member>
        <member name="P:LiveChartsCore.DrawableSeries`4.LegendShapeSize">
            <summary>
            Gets or sets the size of the legend shape.
            </summary>
            <value>
            The size of the legend shape.
            </value>
        </member>
        <member name="M:LiveChartsCore.DrawableSeries`4.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.DrawableSeries`4.OnPaintContextChanged">
            <summary>
            Called when the paint context changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.DrawableSeries`4.InitializeSeries">
            <summary>
            Initializes the series.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Default colors are not valid</exception>
        </member>
        <member name="T:LiveChartsCore.Drawing.Align">
            <summary>
            Defines the drawing alignment.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Drawing.Align.Start">
            <summary>
            Aligns to the start
            </summary>
        </member>
        <member name="F:LiveChartsCore.Drawing.Align.End">
            <summary>
            Aligns to the end
            </summary>
        </member>
        <member name="F:LiveChartsCore.Drawing.Align.Middle">
            <summary>
            Aligns to the middle
            </summary>
        </member>
        <member name="T:LiveChartsCore.Drawing.Common.Animatable">
            <inheritdoc cref="T:LiveChartsCore.Drawing.IAnimatable" />
        </member>
        <member name="F:LiveChartsCore.Drawing.Common.Animatable.transitionProperties">
            <summary>
            The transition properties
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Common.Animatable"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Animatable.LiveChartsCore#Drawing#IAnimatable#IsCompleted">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IAnimatable.IsCompleted" />
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Animatable.LiveChartsCore#Drawing#IAnimatable#CurrentTime">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IAnimatable.CurrentTime" />
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Animatable.RemoveOnCompleted">
            <inheritdoc cref="P:LiveChartsCore.Drawing.IAnimatable.RemoveOnCompleted" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.SetPropertiesTransitions(LiveChartsCore.Drawing.Animation,System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.Common.Animatable.SetPropertiesTransitions(LiveChartsCore.Drawing.Animation,System.String[])" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.RemovePropertyTransition(System.String)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.RemovePropertyTransition(System.String)" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.RemoveTransitions">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.RemoveTransitions" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.Invalidate">
            <summary>
            Invalidates this animatable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.CompleteTransitions(System.String[])">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.CompleteTransitions(System.String[])" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.CompleteAllTransitions">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.CompleteAllTransitions" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.GetTransitionProperty(System.String)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IAnimatable.GetTransitionProperty(System.String)" />
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.RegisterMotionProperty``1(``0)">
            <summary>
            Registers a motion property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="transition">The transition.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.SetCurrentTime(System.Int64)">
            <summary>
            Sets the current time.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.Animatable.GetCurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Drawing.Common.Padding">
            <summary>
            Defines the padding measure helped class,.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Drawing.Common.Padding.Default">
            <summary>
            The default padding.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Padding.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Padding.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>
            The right.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Padding.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.Common.Padding.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.Common.TransitionBuilder">
            <summary>
            The Transition builder class helps to build transitions using fluent syntax.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.TransitionBuilder.#ctor(LiveChartsCore.Drawing.IAnimatable,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Common.TransitionBuilder"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.TransitionBuilder.WithAnimation(LiveChartsCore.Drawing.Animation)">
            <summary>
            Sets the animation.
            </summary>
            <param name="animation">The animation.</param>
            <returns>The transition</returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.TransitionBuilder.WithAnimation(System.Action{LiveChartsCore.Drawing.Animation})">
            <summary>
            Sets the animation.
            </summary>
            <param name="animationBuilder">The animation builder.</param>
            <returns>The transition</returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Common.TransitionBuilder.CompleteCurrentTransitions">
            <summary>
            Sets the current transitions.
            </summary>
            <returns>The transition</returns>
        </member>
        <member name="T:LiveChartsCore.Drawing.Animation">
            <summary>
            Defines an animation.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Animation"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.#ctor(System.Func{System.Single,System.Single},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Animation"/> class.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.#ctor(System.Func{System.Single,System.Single},System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Animation"/> class.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <param name="duration">The duration.</param>
            <param name="repeatTimes">The repeat times.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.#ctor(System.Func{System.Single,System.Single},System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Animation"/> class.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <param name="duration">The duration.</param>
            <param name="repeatTimes">The repeat times.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.#ctor(LiveChartsCore.Drawing.Animation)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.Animation"/> class.
            </summary>
            <param name="animation">The animation.</param>
        </member>
        <member name="P:LiveChartsCore.Drawing.Animation.EasingFunction">
            <summary>
            Gets or sets the easing function.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.Animation.Duration">
            <summary>
            Gets or sets the duration of the transition in Milliseconds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.Animation.Repeat">
            <summary>
            Gets or sets how many times the animation needs to repeat before it is completed, 
            use int.MaxValue to repeat it indefinitely number of times.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.WithEasingFunction(System.Func{System.Single,System.Single})">
            <summary>
            Sets the easing function.
            </summary>
            <param name="easing">The easing.</param>
            <returns>The animation instance</returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.WithDuration(System.TimeSpan)">
            <summary>
            Sets the duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns>The animation instance</returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.WithDuration(System.Int64)">
            <summary>
            Sets the duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns>The animation instance</returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.RepeatTimes(System.Int32)">
            <summary>
            Sets the repeats times.
            </summary>
            <param name="times">The times.</param>
            <returns>The animation instance</returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.Animation.RepeatIndefinitely">
            <summary>
            Sets he repeats times indefinitely number of times.
            </summary>
            <returns>The animation instance</returns>
        </member>
        <member name="T:LiveChartsCore.Drawing.AxisVisualSeprator`1">
            <summary>
            Defines an axis visual separator.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Drawing.AxisVisualSeprator`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.AxisVisualSeprator`1.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.AxisVisualSeprator`1.Line">
            <summary>
            Gets or sets the line.
            </summary>
            <value>
            The line.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.DrawingContext">
            <summary>
            Defines a context that is able to draw 2D shapes in the user interface.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.DrawingContext.ClearCanvas">
            <summary>
            Clears the canvas.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Drawing.IAnimatable">
            <summary>
            Defines an object that can is able to animate its properties.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatable.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatable.CurrentTime">
            <summary>
            Gets or sets the current time.
            </summary>
            <value>
            The current time.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatable.RemoveOnCompleted">
            <summary>
            Gets or sets a value indicating whether the element is removed when all the transitions complete.
            </summary>
            <value>
              <c>true</c> if remove on completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Drawing.IAnimatable.SetPropertiesTransitions(LiveChartsCore.Drawing.Animation,System.String[])">
            <summary>
            Sets the properties transitions.
            </summary>
            <param name="animation">The animation.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IAnimatable.RemovePropertyTransition(System.String)">
            <summary>
            Removes a property transition.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IAnimatable.RemoveTransitions">
            <summary>
            Removes all the current transitions.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.IAnimatable.CompleteAllTransitions">
            <summary>
            Completes all transitions.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Drawing.IAnimatable.CompleteTransitions(System.String[])">
            <summary>
            Completes the transitions.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IAnimatable.GetTransitionProperty(System.String)">
            <summary>
            Gets the transition property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Drawing.IAnimatableBezierSegment">
            <summary>
            Defiens an animable bezier segment.
            </summary>
            <seealso cref="T:LiveChartsCore.Drawing.IAnimatable" />
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatableBezierSegment.X0">
            <summary>
            Gets or sets the x0.
            </summary>
            <value>
            The x0.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatableBezierSegment.Y0">
            <summary>
            Gets or sets the y0.
            </summary>
            <value>
            The y0.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatableBezierSegment.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatableBezierSegment.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatableBezierSegment.X2">
            <summary>
            Gets or sets the x2.
            </summary>
            <value>
            The x2.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IAnimatableBezierSegment.Y2">
            <summary>
            Gets or sets the y2.
            </summary>
            <value>
            The y2.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.IBezierSegment`1">
            <summary>
            Defiens a bezier segment.
            </summary>
            <typeparam name="TPathContext">The type of the path context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IAnimatableBezierSegment" />
            <seealso cref="T:LiveChartsCore.Drawing.IPathCommand`1" />
        </member>
        <member name="T:LiveChartsCore.Drawing.IDoughnutGeometry`1">
            <summary>
            Defines a doughnut geometry.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IDrawable`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
            <value>
            The sweep angle.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.PushOut">
            <summary>
            Gets or sets the push out.
            </summary>
            <value>
            The push out.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.InnerRadius">
            <summary>
            Gets or sets the inner radius.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDoughnutGeometry`1.InvertedCornerRadius">
            <summary>
            Gets or sets a value indicating whether the direction of the corner radius is inverted.
            </summary>
            <value>
              <c>true</c> if the direction is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.IDoughnutVisualChartPoint`1">
            <summary>
            Defines a douggnut visual chart point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IDoughnutGeometry`1" />
            <seealso cref="T:LiveChartsCore.Drawing.IVisualChartPoint`1" />
        </member>
        <member name="T:LiveChartsCore.Drawing.IDrawable`1">
            <summary>
            Defines a drawable object, an object that can be represented in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IAnimatable" />
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawable`1.Draw(`0)">
            <summary>
            Draws the instance in the user interface with for the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:LiveChartsCore.Drawing.IDrawableTask`1">
            <summary>
            Defines a set of geometries that will be drawn according to this instance specifications.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDrawableTask`1.IsStroke">
            <summary>
            Gets or sets a value indicating whether this instance is stroke.
            </summary>
            <value>
              <c>true</c> if this instance is stroke; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDrawableTask`1.IsFill">
            <summary>
            Gets or sets a value indicating whether this instance is fill.
            </summary>
            <value>
              <c>true</c> if this instance is fill; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDrawableTask`1.ZIndex">
            <summary>
            Gets or sets the index of the z.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDrawableTask`1.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IDrawableTask`1.IsPaused">
            <summary>
            Gets or sets a value indicating whether this instance is paused.
            </summary>
            <value>
              <c>true</c> if this instance is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.GetClipRectangle(LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Gets or sets the clip rectangle.
            </summary>
            <returns>
            <param name="canvas">The canvas.</param>
            The clip rectangle.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.SetClipRectangle(LiveChartsCore.Drawing.MotionCanvas{`0},System.Drawing.RectangleF)">
            <summary>
            Gets or sets the clip rectangle.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="value">
            The clip rectangle.
            </param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.InitializeTask(`0)">
            <summary>
            Initializes the task.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.GetGeometries(LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Gets the geometries.
            </summary>
            <returns></returns>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.SetGeometries(LiveChartsCore.Drawing.MotionCanvas{`0},System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawable{`0}})">
            <summary>
            Sets the geometries.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.AddGeometryToPaintTask(LiveChartsCore.Drawing.MotionCanvas{`0},LiveChartsCore.Drawing.IDrawable{`0})">
            <summary>
            Adds the geometry to paint task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.RemoveGeometryFromPainTask(LiveChartsCore.Drawing.MotionCanvas{`0},LiveChartsCore.Drawing.IDrawable{`0})">
            <summary>
            Removes the geometry from pain task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.ClearGeometriesFromPaintTask(LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Removes all geometry from paint task.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.SetOpacity(`0,LiveChartsCore.Drawing.IGeometry{`0})">
            <summary>
            Sets the opacity according to the given geometry.
            </summary>
            <param name="context">The context.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.ResetOpacity(`0,LiveChartsCore.Drawing.IGeometry{`0})">
            <summary>
            Resets the opacity.
            </summary>
            <param name="context">The context.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IDrawableTask`1.CloneTask">
            <summary>
            Clones the task.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Drawing.IGeometry`1">
            <summary>
            Defines a geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IDrawable`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.IGeometry`1.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IGeometry`1.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IGeometry`1.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IGeometry`1.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="M:LiveChartsCore.Drawing.IGeometry`1.Measure(LiveChartsCore.Drawing.IDrawableTask{`0})">
            <summary>
            Measures the specified drawable task.
            </summary>
            <param name="drawableTask">The drawable task.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Drawing.ILabelGeometry`1">
            <summary>
            Defines a label geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IGeometry`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.ILabelGeometry`1.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILabelGeometry`1.VerticalAlign">
            <summary>
            Gets or sets the vertical align.
            </summary>
            <value>
            The vertical align.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILabelGeometry`1.HorizontalAlign">
            <summary>
            Gets or sets the horizontal align.
            </summary>
            <value>
            The horizontal align.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILabelGeometry`1.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILabelGeometry`1.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>
            The size of the text.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.ILineBezierVisualChartPoint`1">
            <summary>
            Defines a line bezier segment chart point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IVisualChartPoint`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.ILineBezierVisualChartPoint`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILineBezierVisualChartPoint`1.Bezier">
            <summary>
            Gets the bezier.
            </summary>
            <value>
            The bezier.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.ILineGeometry`1">
            <summary>
            Defines a line geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IGeometry`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.ILineGeometry`1.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILineGeometry`1.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.ILinePathSegment`1">
            <summary>
            Defines a line path segment.
            </summary>
            <typeparam name="TPath">The type of the path.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IPathCommand`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.ILinePathSegment`1.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ILinePathSegment`1.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.IMoveToPathCommand`1">
            <summary>
            Defines the move to path comamnd.
            </summary>
            <typeparam name="TPath">The type of the path.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IPathCommand`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.IMoveToPathCommand`1.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IMoveToPathCommand`1.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.IPathCommand`1">
            <summary>
            Defines a path command.
            </summary>
            <typeparam name="TPathContext">The type of the path context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IAnimatable" />
        </member>
        <member name="M:LiveChartsCore.Drawing.IPathCommand`1.Execute(`0,System.Int64,LiveChartsCore.Drawing.Common.Animatable)">
            <summary>
            Executes the command in the path.
            </summary>
            <param name="path">The path.</param>
            <param name="currentTime">The current time.</param>
            <param name="pathGeometry">The path geometry.</param>
        </member>
        <member name="T:LiveChartsCore.Drawing.IPathGeometry`2">
            <summary>
            Defines a path geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathArgs">The type of the path arguments.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IDrawable`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.IPathGeometry`2.IsClosed">
            <summary>
            Gets or sets a value indicating whether the path is closed.
            </summary>
            <value>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Drawing.IPathGeometry`2.AddCommand(LiveChartsCore.Drawing.IPathCommand{`1})">
            <summary>
            Adds a path command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IPathGeometry`2.ContainsCommand(LiveChartsCore.Drawing.IPathCommand{`1})">
            <summary>
            Determines whether the specified command is contained in the current path.
            </summary>
            <param name="command">The command.</param>
            <returns>
              <c>true</c> if the specified command contains command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.IPathGeometry`2.RemoveCommand(LiveChartsCore.Drawing.IPathCommand{`1})">
            <summary>
            Removes a given command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:LiveChartsCore.Drawing.IPathGeometry`2.ClearCommands">
            <summary>
            Clears the commands.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Drawing.IRoundedRectangleChartPoint`1">
            <summary>
            Defines a rounded rectangle visual chart point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.ISizedVisualChartPoint`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.IRoundedRectangleChartPoint`1.Rx">
            <summary>
            Gets or sets the rx, the radius used in the x axis to round the corners of each column in pixels.
            </summary>
            <value>
            The rx.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.IRoundedRectangleChartPoint`1.Ry">
            <summary>
            Gets or sets the ry, the radius used in the y axis to round the corners of each column in pixels.
            </summary>
            <value>
            The ry.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.ISizedGeometry`1">
            <summary>
            Defines a sized geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IGeometry`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.ISizedGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.ISizedGeometry`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="T:LiveChartsCore.Drawing.ISizedVisualChartPoint`1">
            <summary>
            Defines a sized visual chart point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.ISizedGeometry`1" />
            <seealso cref="T:LiveChartsCore.Drawing.IVisualChartPoint`1" />
        </member>
        <member name="T:LiveChartsCore.Drawing.IVisualChartPoint`1">
            <summary>
            Defines an object that contains a <see cref="T:LiveChartsCore.Drawing.IDrawable`1"/> to highlight when the point requires so.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.IVisualChartPoint`1.HighlightableGeometry">
            <summary>
            Gets the main <see cref="T:LiveChartsCore.Drawing.IDrawable`1"/>.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Drawing.LineBezierVisualPoint`4">
            <summary>
            Defines a line bezier visual point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TBezierSegment">The type of the bezier segment.</typeparam>
            <typeparam name="TPathArgs">The type of the path arguments.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.ILineBezierVisualChartPoint`1" />
        </member>
        <member name="P:LiveChartsCore.Drawing.LineBezierVisualPoint`4.Geometry">
            <summary>
            Gets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.LineBezierVisualPoint`4.Bezier">
            <summary>
            Gets the bezier.
            </summary>
            <value>
            The bezier.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.LineBezierVisualPoint`4.HighlightableGeometry">
            <summary>
            Gets the main <see cref="T:LiveChartsCore.Drawing.IDrawable`1" />.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Drawing.MotionCanvas`1">
            <summary>
            Defines a canvas that is able to animate the shapes inside it.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Drawing.MotionCanvas`1"/> class.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Drawing.MotionCanvas`1.Invalidated">
            <summary>
            Occurs when the visual is invalidated.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Drawing.MotionCanvas`1.Validated">
            <summary>
            Occurs when all the visuals in the canvas are valid.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Drawing.MotionCanvas`1.IsValid">
            <summary>
            Returns true if the visual is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Drawing.MotionCanvas`1.Sync">
            <summary>
            Gets the synchronize object.
            </summary>
            <value>
            The synchronize.
            </value>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.DrawFrame(`0)">
            <summary>
            Draws the frame.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="P:LiveChartsCore.Drawing.MotionCanvas`1.DrawablesCount">
            <summary>
            Gets the drawables count.
            </summary>
            <value>
            The drawables count.
            </value>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.AddDrawableTask(LiveChartsCore.Drawing.IDrawableTask{`0})">
            <summary>
            Adds a drawable task.
            </summary>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.SetPaintTasks(System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawableTask{`0}})">
            <summary>
            Sets the paint tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.RemovePaintTask(LiveChartsCore.Drawing.IDrawableTask{`0})">
            <summary>
            Removes the paint task.
            </summary>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Drawing.MotionCanvas`1.CountGeometries">
            <summary>
            Counts the geometries.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.EasingFunctions">
            <summary>
            A set of predefined easing functions.
            </summary>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BackIn">
            <summary>
            Gets the back in.
            </summary>
            <value>
            The back in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BackOut">
            <summary>
            Gets the back out.
            </summary>
            <value>
            The back out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BackInOut">
            <summary>
            Gets the back in out.
            </summary>
            <value>
            The back in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BounceIn">
            <summary>
            Gets the bounce in.
            </summary>
            <value>
            The bounce in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BounceOut">
            <summary>
            Gets the bounce out.
            </summary>
            <value>
            The bounce out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BounceInOut">
            <summary>
            Gets the bounce in out.
            </summary>
            <value>
            The bounce in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.CircleIn">
            <summary>
            Gets the circle in.
            </summary>
            <value>
            The circle in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.CircleOut">
            <summary>
            Gets the circle out.
            </summary>
            <value>
            The circle out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.CircleInOut">
            <summary>
            Gets the circle in out.
            </summary>
            <value>
            The circle in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.CubicIn">
            <summary>
            Gets the cubic in.
            </summary>
            <value>
            The cubic in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.CubicOut">
            <summary>
            Gets the cubic out.
            </summary>
            <value>
            The cubic out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.CubicInOut">
            <summary>
            Gets the cubic in out.
            </summary>
            <value>
            The cubic in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.Ease">
            <summary>
            Gets the ease.
            </summary>
            <value>
            The ease.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.EaseIn">
            <summary>
            Gets the ease in.
            </summary>
            <value>
            The ease in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.EaseOut">
            <summary>
            Gets the ease out.
            </summary>
            <value>
            The ease out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.EaseInOut">
            <summary>
            Gets the ease in out.
            </summary>
            <value>
            The ease in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.ElasticIn">
            <summary>
            Gets the elastic in.
            </summary>
            <value>
            The elastic in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.ElasticOut">
            <summary>
            Gets the elastic out.
            </summary>
            <value>
            The elastic out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.ElasticInOut">
            <summary>
            Gets the elastic in out.
            </summary>
            <value>
            The elastic in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.ExponentialIn">
            <summary>
            Gets the exponential in.
            </summary>
            <value>
            The exponential in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.ExponentialOut">
            <summary>
            Gets the exponential out.
            </summary>
            <value>
            The exponential out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.ExponentialInOut">
            <summary>
            Gets the exponential in out.
            </summary>
            <value>
            The exponential in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.Lineal">
            <summary>
            Gets the lineal.
            </summary>
            <value>
            The lineal.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.PolinominalIn">
            <summary>
            Gets the polinominal in.
            </summary>
            <value>
            The polinominal in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.PolinominalOut">
            <summary>
            Gets the polinominal out.
            </summary>
            <value>
            The polinominal out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.PolinominalInOut">
            <summary>
            Gets the polinominal in out.
            </summary>
            <value>
            The polinominal in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.QuadraticIn">
            <summary>
            Gets the quadratic in.
            </summary>
            <value>
            The quadratic in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.QuadraticOut">
            <summary>
            Gets the quadratic out.
            </summary>
            <value>
            The quadratic out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.QuadraticInOut">
            <summary>
            Gets the quadratic in out.
            </summary>
            <value>
            The quadratic in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.SinIn">
            <summary>
            Gets the sin in.
            </summary>
            <value>
            The sin in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.SinOut">
            <summary>
            Gets the sin out.
            </summary>
            <value>
            The sin out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.SinInOut">
            <summary>
            Gets the sin in out.
            </summary>
            <value>
            The sin in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomBackIn">
            <summary>
            Gets the build custom back in.
            </summary>
            <value>
            The build custom back in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomBackOut">
            <summary>
            Gets the build custom back out.
            </summary>
            <value>
            The build custom back out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomBackInOut">
            <summary>
            Gets the build custom back in out.
            </summary>
            <value>
            The build custom back in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomElasticIn">
            <summary>
            Gets the build custom elastic in.
            </summary>
            <value>
            The build custom elastic in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomElasticOut">
            <summary>
            Gets the build custom elastic out.
            </summary>
            <value>
            The build custom elastic out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomElasticInOut">
            <summary>
            Gets the build custom elastic in out.
            </summary>
            <value>
            The build custom elastic in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomPolinominalIn">
            <summary>
            Gets the build custom polinominal in.
            </summary>
            <value>
            The build custom polinominal in.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomPolinominalOut">
            <summary>
            Gets the build custom polinominal out.
            </summary>
            <value>
            The build custom polinominal out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCustomPolinominalInOut">
            <summary>
            Gets the build custom polinominal in out.
            </summary>
            <value>
            The build custom polinominal in out.
            </value>
        </member>
        <member name="P:LiveChartsCore.EasingFunctions.BuildCubicBezier">
            <summary>
            Gets the build cubic bezier.
            </summary>
            <value>
            The build cubic bezier.
            </value>
        </member>
        <member name="T:LiveChartsCore.Easing.BackEasingFunction">
            <summary>
            Defines the BackEasingFunction
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.BackEasingFunction.In(System.Single,System.Single)">
            <summary>
            The in easing
            </summary>
            <param name="t">The t.</param>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.BackEasingFunction.Out(System.Single,System.Single)">
            <summary>
            the out easing
            </summary>
            <param name="t">The t.</param>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.BackEasingFunction.InOut(System.Single,System.Single)">
            <summary>
            the in out easing
            </summary>
            <param name="t">The t.</param>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Easing.BounceEasingFunction">
            <summary>
            Defines the BounceEasingFunction
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.BounceEasingFunction.In(System.Single)">
            <summary>
            the in easing.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.BounceEasingFunction.Out(System.Single)">
            <summary>
            the out easing.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.BounceEasingFunction.InOut(System.Single)">
            <summary>
            the in out easing.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Easing.CircleEasingFunction">
            <summary>
            Defines the CircleEasingFunction
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.CircleEasingFunction.In(System.Single)">
            <summary>
            the ease in.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.CircleEasingFunction.Out(System.Single)">
            <summary>
            the ease out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.CircleEasingFunction.InOut(System.Single)">
            <summary>
            the ease in out
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Easing.CubicBezierEasingFunction">
            <summary>
            Defines the CubicBezierEasingFunction.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.CubicBezierEasingFunction.BuildBezierEasingFunction(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a bezier easing function.
            </summary>
            <param name="mX1">The m x1.</param>
            <param name="mY1">The m y1.</param>
            <param name="mX2">The m x2.</param>
            <param name="mY2">The m y2.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Bezier x values must be in [0, 1] range</exception>
        </member>
        <member name="T:LiveChartsCore.Easing.CubicEasingFunction">
            <summary>
            Defines the CubicEasingFunction
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.CubicEasingFunction.In(System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.CubicEasingFunction.Out(System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.CubicEasingFunction.InOut(System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Easing.DelayedFunction">
            <summary>
            A helper class to build delayed animations.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.DelayedFunction.#ctor(System.Func{System.Single,System.Single},LiveChartsCore.Kernel.ChartPoint,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Easing.DelayedFunction"/> class.
            </summary>
            <param name="baseFunction">The base function.</param>
            <param name="point">The point.</param>
            <param name="perPointDelay">The per point delay.</param>
        </member>
        <member name="P:LiveChartsCore.Easing.DelayedFunction.Function">
            <summary>
            Gets the function.
            </summary>
            <value>
            The function.
            </value>
        </member>
        <member name="P:LiveChartsCore.Easing.DelayedFunction.Speed">
            <summary>
            Gets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="T:LiveChartsCore.Easing.ElasticEasingFunction">
            <summary>
            Defines the ElasticEasingFunction.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.ElasticEasingFunction.In(System.Single,System.Single,System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <param name="a">a.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.ElasticEasingFunction.Out(System.Single,System.Single,System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <param name="a">a.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.ElasticEasingFunction.InOut(System.Single,System.Single,System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <param name="a">a.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Easing.ExponentialEasingFunction">
            <summary>
            Defines the ExponentialEasingFunction.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.ExponentialEasingFunction.In(System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.ExponentialEasingFunction.Out(System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.ExponentialEasingFunction.InOut(System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Easing.PolinominalEasingFunction">
            <summary>
            Defines the PolinominalEasingFunction.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Easing.PolinominalEasingFunction.In(System.Single,System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.PolinominalEasingFunction.Out(System.Single,System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Easing.PolinominalEasingFunction.InOut(System.Single,System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.ISeries">
            <summary>
            Defines a chart series.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ISeries.SeriesId">
            <summary>
            Gets or sets a series unique identifier, the library handles this id automatically.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ISeries.HoverState">
            <summary>
            Gets or sets the state where the visual is moved to when the mouse moves over a <see cref="T:LiveChartsCore.Kernel.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ISeries.SeriesProperties">
            <summary>
            Gets the properties of the series.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ISeries.Name">
            <summary>
            Gets or sets the name of the series, the name is normally used by <see cref="T:LiveChartsCore.Kernel.IChartTooltip`1"/> or 
            <see cref="T:LiveChartsCore.Kernel.IChartLegend`1"/>, the default value is set automatically by the library.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ISeries.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
              <c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.DataPadding">
            <summary>
            Gets or sets the data padding, both coordinates (X and Y) from 0 to 1, where 0 is nothing and 1 is the axis tick
            (the separation between every label).
            </summary>
            <value>
            The data padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.ZIndex">
            <summary>
            Gets or sets the z index position.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.Pivot">
            <summary>
            Gets or sets the value where the direction of the axis changes, by default is 0.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ISeries.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed, if this property is null, the
            <see cref="P:LiveChartsCore.Chart`1.AnimationsSpeed"/> property will be used.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.EasingFunction">
            <summary>
            Gets or sets the easing function to animate the series, if this property is null, the
            <see cref="P:LiveChartsCore.Chart`1.EasingFunction"/> property will be used.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.TooltipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries.DataLabelsFormatter">
            <summary>
            Gets or sets the data label formatter, this function will build the label when a point in this series 
            is shown as data label.
            </summary>
            <value>
            The data label formatter.
            </value>
        </member>
        <member name="E:LiveChartsCore.ISeries.Disposing">
            <summary>
            Occurs before the series is disposed.
            </summary>
        </member>
        <member name="M:LiveChartsCore.ISeries.Fetch(LiveChartsCore.Kernel.IChart)">
            <summary>
            Gets a <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> array with the points used to generate the plot.
            </summary>
            <param name="chart">the chart</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.ISeries.FindPointsNearTo(LiveChartsCore.Kernel.IChart,System.Drawing.PointF)">
            <summary>
            Gets the <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> instances which contain the <paramref name="pointerPosition"/>, according 
            to the chart's <see cref="T:LiveChartsCore.Measure.TooltipFindingStrategy"/> property.
            </summary>
            <param name="chart">the chart</param>
            <param name="pointerPosition">the pointer position</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.ISeries.AddPointToState(LiveChartsCore.Kernel.ChartPoint,System.String)">
            <summary>
            Marks a given point as a given state.
            </summary>
            <param name="chartPoint"></param>
            <param name="state"></param>
        </member>
        <member name="M:LiveChartsCore.ISeries.RemovePointFromState(LiveChartsCore.Kernel.ChartPoint,System.String)">
            <summary>
            Removes a given point from the given state.
            </summary>
            <param name="chartPoint"></param>
            <param name="state"></param>
        </member>
        <member name="M:LiveChartsCore.ISeries.RestartAnimations">
            <summary>
            Clears the visuals in the cache and re-starts animations.
            </summary>
        </member>
        <member name="M:LiveChartsCore.ISeries.Delete(LiveChartsCore.Kernel.IChartView)">
            <summary>
            Deletes the series from the user interface.
            </summary>
        </member>
        <member name="T:LiveChartsCore.ISeries`1">
            <summary>
            Defines a series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:LiveChartsCore.ISeries`1.Mapping">
            <summary>
            Gets or sets the mapping.
            </summary>
            <value>
            The mapping.
            </value>
        </member>
        <member name="P:LiveChartsCore.ISeries`1.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.ActionThrottler">
            <summary>
            An object that is able to throttle an action.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.ActionThrottler.#ctor(System.Action,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.ActionThrottler"/> class.
            </summary>
            <param name="targetAction">The target action to throttle.</param>
            <param name="time">The throttling time.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.ActionThrottler.Call">
            <summary>
            Schedules a call to the target action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.ActionThrottler.ForceCall">
            <summary>
            Forces the call to the target action, this call is not throttled.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.AreaHelper`5">
            <summary>
            Defines the area helper class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TGeometryPath">The type of the geometry path.</typeparam>
            <typeparam name="TLineSegment">The type of the line segment.</typeparam>
            <typeparam name="TMoveTo">The type of the move to.</typeparam>
            <typeparam name="TPathContext">The type of the path context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Kernel.AreaHelper`5.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.AreaHelper`5.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>
            The start point.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.AreaHelper`5.StartSegment">
            <summary>
            Gets or sets the start segment.
            </summary>
            <value>
            The start segment.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.AreaHelper`5.EndSegment">
            <summary>
            Gets or sets the end segment.
            </summary>
            <value>
            The end segment.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.AreaHelper`5.IsInitialized">
            <summary>
            Gets or sets a value indicating whether this instance is initialized.
            </summary>
            <value>
              <c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.AreaHelper`5.Initialize(System.Action{LiveChartsCore.Kernel.AreaHelper{`0,`1,`2,`3,`4},LiveChartsCore.Drawing.Animation},LiveChartsCore.Drawing.Animation)">
            <summary>
            Initializes the helper with the specified transition setter.
            </summary>
            <param name="transitionSetter">The transition setter.</param>
            <param name="defaultAnimation">The default animation.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.BezierData">
            <summary>
            Defines the bezier data class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.BezierData.#ctor(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.BezierData"/> class.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.TargetPoint">
            <summary>
            Gets or sets the target point.
            </summary>
            <value>
            The target point.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.X0">
            <summary>
            Gets or sets the x0.
            </summary>
            <value>
            The x0.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.Y0">
            <summary>
            Gets or sets the y0.
            </summary>
            <value>
            The y0.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.X2">
            <summary>
            Gets or sets the x2.
            </summary>
            <value>
            The x2.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.Y2">
            <summary>
            Gets or sets the y2.
            </summary>
            <value>
            The y2.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.OriginalData">
            <summary>
            Gets or sets the original data.
            </summary>
            <value>
            The original data.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.IsFirst">
            <summary>
            Gets or sets a value indicating whether this instance is first.
            </summary>
            <value>
              <c>true</c> if this instance is first; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.BezierData.IsLast">
            <summary>
            Gets or sets a value indicating whether this instance is last.
            </summary>
            <value>
              <c>true</c> if this instance is last; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.ChartEventHandler`1">
            <summary>
            Defines a method that will handle an event in a chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.ChartPoint">
            <summary>
            Defines a point in a chart.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.ChartPoint.#ctor(LiveChartsCore.Kernel.IChartView,LiveChartsCore.ISeries)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.IsNull">
            <summary>
            Gets or sets a value indicating whether this instance is null.
            </summary>
            <value>
              <c>true</c> if this instance is null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.PrimaryValue">
            <summary>
            Gets or sets the primary value.
            </summary>
            <value>
            The primary value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.SecondaryValue">
            <summary>
            Gets or sets the secondary value.
            </summary>
            <value>
            The secondary value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.TertiaryValue">
            <summary>
            Gets or sets the tertiary value.
            </summary>
            <value>
            The tertiary value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.AsTooltipString">
            <summary>
            Gets the point as tooltip string.
            </summary>
            <value>
            As tooltip string.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.AsDataLabel">
            <summary>
            Gets the point as data label.
            </summary>
            <value>
            As tooltip string.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPoint.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.ChartPointContext">
            <summary>
            Defines the environment of a point in a chart.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.ChartPointContext.#ctor(LiveChartsCore.Kernel.IChartView,LiveChartsCore.ISeries)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.ChartPointContext"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>
            The chart.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.Series">
            <summary>
            Gets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.Index">
            <summary>
            Gets the position of the point the collection that was used when the point was drawn.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.DataSource">
            <summary>
            Gets the DataSource.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.Visual">
            <summary>
            Gets the visual.
            </summary>
            <value>
            The visual.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.Label">
            <summary>
            Gets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartPointContext.HoverArea">
            <summary>
            Gets or sets the area that triggers the ToolTip.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Kernel.ChartUpdateParams">
            <summary>
            Defines the chart update parameter.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartUpdateParams.IsAutomaticUpdate">
            <summary>
            Gets or sets a value indicating whether this instance is automatic update.
            </summary>
            <value>
              <c>true</c> if this instance is automatic update; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ChartUpdateParams.Throttling">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:LiveChartsCore.Kernel.ChartUpdateParams"/> is throttling.
            </summary>
            <value>
              <c>true</c> if throttling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.CollectionDeepObserver`1">
            <summary>
            A helper class that tracks both, <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> and 
            <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> events.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:LiveChartsCore.Kernel.CollectionDeepObserver`1.checkINotifyPropertyChanged">
            <summary>
            The check i notify property changed
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.CollectionDeepObserver`1.#ctor(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.ComponentModel.PropertyChangedEventHandler,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.CollectionDeepObserver`1"/> class.
            </summary>
            <param name="onCollectionChanged">The on collection changed handler.</param>
            <param name="onItemPropertyChanged">The on item property changed handler.</param>
            <param name="checkINotifyPropertyChanged">if true, it will force the check to verify if the type {T} implements INotifyPropertyChanged.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.CollectionDeepObserver`1.Initialize(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes the listeners.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.CollectionDeepObserver`1.Dispose(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Disposes the listeners.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.DataFactory`1">
            <summary>
            Defines the data factory class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDataFactoryProvider`1" />
        </member>
        <member name="M:LiveChartsCore.Kernel.DataFactory`1.GetProvider``1">
            <summary>
            Gets the provider.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.DataProvider`2">
            <summary>
            Defines a data provider.
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.DataProvider`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.DataProvider`2"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.DataProvider`2.Fetch(LiveChartsCore.ISeries{`0},LiveChartsCore.Kernel.IChart)">
            <summary>
            Fetches the the points for the specified series.
            </summary>
            <param name="series">The series.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.DataProvider`2.DisposePoint(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Disposes a given point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.DataProvider`2.GetCartesianBounds(LiveChartsCore.CartesianChart{`1},LiveChartsCore.Kernel.IDrawableSeries{`1},LiveChartsCore.Kernel.IAxis{`1},LiveChartsCore.Kernel.IAxis{`1})">
            <summary>
            Gets the Cartesian bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.DataProvider`2.GetPieBounds(LiveChartsCore.PieChart{`1},LiveChartsCore.Kernel.IPieSeries{`1})">
            <summary>
            Gets the pie bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">Unexpected null stacker</exception>
        </member>
        <member name="M:LiveChartsCore.Kernel.DataProvider`2.RestartVisuals">
            <summary>
            Clears the visuals in the cache.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.DefaultPaintTask`1">
            <summary>
            Defines a default paint task.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Drawing.IDrawableTask`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.IsStroke">
            <summary>
            Gets or sets a value indicating whether this instance is stroke.
            </summary>
            <value>
            <c>true</c> if this instance is stroke; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.IsFill">
            <summary>
            Gets or sets a value indicating whether this instance is fill.
            </summary>
            <value>
            <c>true</c> if this instance is fill; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.ZIndex">
            <summary>
            Gets or sets the index of the z.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.CurrentTime">
            <summary>
            Gets or sets the current time.
            </summary>
            <value>
            The current time.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.RemoveOnCompleted">
            <summary>
            Gets or sets a value indicating whether the element is removed when all the transitions complete.
            </summary>
            <value>
              <c>true</c> if remove on completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DefaultPaintTask`1.IsPaused">
            <summary>
            Gets or sets a value indicating whether this instance is paused.
            </summary>
            <value>
            <c>true</c> if this instance is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.AddGeometryToPaintTask(LiveChartsCore.Drawing.MotionCanvas{`0},LiveChartsCore.Drawing.IDrawable{`0})">
            <summary>
            Adds the geometry to paint task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.CloneTask">
            <summary>
            Clones the task.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.CompleteTransitions(System.String[])">
            <summary>
            Completes the transitions.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.GetGeometries(LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Gets the geometries.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="">The .</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.GetTransitionProperty(System.String)">
            <summary>
            Gets the transition property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.InitializeTask(`0)">
            <summary>
            Initializes the task.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.RemoveGeometryFromPainTask(LiveChartsCore.Drawing.MotionCanvas{`0},LiveChartsCore.Drawing.IDrawable{`0})">
            <summary>
            Removes the geometry from pain task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.ClearGeometriesFromPaintTask(LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Removes all geometry from paint task.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.RemovePropertyTransition(System.String)">
            <summary>
            Removes a property transition.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.SetGeometries(LiveChartsCore.Drawing.MotionCanvas{`0},System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawable{`0}})">
            <summary>
            Sets the geometries.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.SetPropertiesTransitions(LiveChartsCore.Drawing.Animation,System.String[])">
            <summary>
            Sets the properties transitions.
            </summary>
            <param name="animation">The animation.</param>
            <param name="propertyName">Name of the property.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.CompleteAllTransitions">
            <summary>
            Completes all transitions.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.RemoveTransitions">
            <summary>
            Removes all the current transitions.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.SetOpacity(`0,LiveChartsCore.Drawing.IGeometry{`0})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IDrawableTask`1.SetOpacity(`0,LiveChartsCore.Drawing.IGeometry{`0})" />
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.ResetOpacity(`0,LiveChartsCore.Drawing.IGeometry{`0})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IDrawableTask`1.ResetOpacity(`0,LiveChartsCore.Drawing.IGeometry{`0})" />
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.GetClipRectangle(LiveChartsCore.Drawing.MotionCanvas{`0})">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IDrawableTask`1.GetClipRectangle(LiveChartsCore.Drawing.MotionCanvas{`0})" />
        </member>
        <member name="M:LiveChartsCore.Kernel.DefaultPaintTask`1.SetClipRectangle(LiveChartsCore.Drawing.MotionCanvas{`0},System.Drawing.RectangleF)">
            <inheritdoc cref="M:LiveChartsCore.Drawing.IDrawableTask`1.SetClipRectangle(LiveChartsCore.Drawing.MotionCanvas{`0},System.Drawing.RectangleF)" />
        </member>
        <member name="T:LiveChartsCore.Kernel.Extensions">
            <summary>
            LiveCharts kerner extensions.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.GetCartesianTooltipLocation(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.TooltipPoint},LiveChartsCore.Measure.TooltipPosition,System.Drawing.SizeF)">
            <summary>
            Returns the left, top coordinate of the tooltip based on the found points, the position and the tooltip size.
            </summary>
            <param name="foundPoints"></param>
            <param name="position"></param>
            <param name="tooltipSize"></param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.GetPieTooltipLocation(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.TooltipPoint},LiveChartsCore.Measure.TooltipPosition,System.Drawing.SizeF)">
            <summary>
             Returns the left, top coordinate of the tooltip based on the found points, the position and the tooltip size.
            </summary>
            <param name="foundPoints">The found points.</param>
            <param name="position">The position.</param>
            <param name="tooltipSize">Size of the tooltip.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.GetTick``1(LiveChartsCore.Kernel.IAxis{``0},System.Drawing.SizeF)">
            <summary>
            Gets the tick.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="axis">The axis.</param>
            <param name="controlSize">Size of the control.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.GetTick``1(LiveChartsCore.Kernel.IAxis{``0},System.Drawing.SizeF,LiveChartsCore.Measure.Bounds)">
            <summary>
            Gets the tick.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="axis">The axis.</param>
            <param name="controlSize">Size of the control.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.TransitionateProperties(LiveChartsCore.Drawing.IAnimatable,System.String[])">
            <summary>
            Creates a transition builder for the specified properties.
            </summary>
            <param name="animatable">The animatable.</param>
            <param name="properties">The properties.</param>
            <returns></returns>
            <exception cref="T:System.Exception">At least one property is required when calling {nameof(TransitionateProperties)}</exception>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.IsBarSeries(LiveChartsCore.ISeries)">
            <summary>
            Determines whether is bar series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is bar series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.IsColumnSeries(LiveChartsCore.ISeries)">
            <summary>
            Determines whether is column series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is column series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.IsRowSeries(LiveChartsCore.ISeries)">
            <summary>
            Determines whether is row series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is row series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.IsStackedSeries(LiveChartsCore.ISeries)">
            <summary>
            Determines whether is stacked series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is stacked series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.IsVerticalSeries(LiveChartsCore.ISeries)">
            <summary>
            Determines whether is vertical series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is vertical series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.IsHorizontalSeries(LiveChartsCore.ISeries)">
            <summary>
            Determines whether is horizontal series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is horizontal series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.AddToState(LiveChartsCore.Kernel.ChartPoint,System.String)">
            <summary>
            Adds a point to the specified state.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.RemoveFromState(LiveChartsCore.Kernel.ChartPoint,System.String)">
            <summary>
            Removes a point from the specified state.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.AddToHoverState(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Adds a point to the hover state.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.Extensions.RemoveFromHoverState(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Removes a point from the hover state.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.HoverArea">
            <summary>
            Defines a hover area.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.HoverArea.IsTriggerBy(System.Drawing.PointF,LiveChartsCore.Measure.TooltipFindingStrategy)">
            <summary>
            Determines whether the area is trigger by the specified point in the user interface.
            </summary>
            <param name="point">The point.</param>
            <param name="strategy">The strategy.</param>
            <returns>
              <c>true</c> if [is trigger by] [the specified point]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.HoverArea.SuggestTooltipPlacement(LiveChartsCore.Kernel.TooltipPlacementContext)">
            <summary>
            Suggests the tooltip placement.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.IAxis">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.PreviousDataBounds">
            <summary>
            Gets the previous data bounds.
            </summary>
            <value>
            The previous data bounds.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.PreviousVisibleDataBounds">
            <summary>
            Gets the previous data bounds.
            </summary>
            <value>
            The previous data bounds.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.DataBounds">
            <summary>
            Gets the data bounds, the min and max values in the axis.
            </summary>
            <value>
            The data bounds.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.VisibleDataBounds">
            <summary>
            Gets the data visible bounds, the min and max visible values in the axis.
            </summary>
            <value>
            The data bounds.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Orientation">
            <summary>
            Gets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Xo">
            <summary>
            Gets or sets the xo, a reference used internally to calculate the axis position.
            </summary>
            <value>
            The xo.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Yo">
            <summary>
            Gets or sets the yo, a reference used internally to calculate the axis position..
            </summary>
            <value>
            The yo.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Labeler">
            <summary>
            Gets or sets the labeler, a function that receives a number and return the label content as string.
            </summary>
            <value>
            The labeler.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.MinStep">
            <summary>
            Gets or sets the minimum step, the step defines the interval between every separator in the axis,
            LiveCharts will calculate it automatically based on the chart data and the chart size size, if the calculated step is less than the <see cref="P:LiveChartsCore.Kernel.IAxis.MinStep"/> 
            then <see cref="P:LiveChartsCore.Kernel.IAxis.MinStep"/> will be used as the axis step, default is 0.
            </summary>
            <value>
            The step.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.UnitWidth">
            <summary>
            Gets or sets the unit with, it means the width of every point (if the series requires it) in the chart values scale, this value
            should normally be 1, unless you are plotting in a custom scale, default is 1.
            </summary>
            <value>
            The unit with.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.MinLimit">
            <summary>
            Gets or sets the minimum value visible in the axis, any point less than this value will be hidden, 
            set it to null to use a value based on the smaller value in the chart.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.MaxLimit">
            <summary>
            Gets or sets the maximum value visible in the axis, any point greater than this value will be hidden, 
            set it null to use a value based on the greater value in the chart.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.PreviousMaxLimit">
            <summary>
            Gets or sets the previous maximum limit.
            </summary>
            <value>
            The previous maximum limit.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.PreviousMinLimit">
            <summary>
            Gets or sets the previous minimum limit.
            </summary>
            <value>
            The previous minimum limit.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
              <c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.IsInverted">
            <summary>
            Gets or sets a value indicating whether the axis is inverted based on the Cartesian coordinate system.
            </summary>
            <value>
              <c>true</c> if this instance is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Position">
            <summary>
            Gets or sets the axis position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.LabelsRotation">
            <summary>
            Gets or sets the labels rotation.
            </summary>
            <value>
            The labels rotation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>
            The size of the text.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.Labels">
            <summary>
            Gets or sets the labels, if labels are not null, then the axis label will be pulled from the labels collection,
            the label is mapped to the chart based on the position of the label and the position of the point, both integers,
            if the axis requires a label outside the bounds of the labels IList then the index will be returned as the label.
            Default value is null.
            </summary>
            <value>
            The labels.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed, if this property is null, the
            <see cref="P:LiveChartsCore.Chart`1.AnimationsSpeed"/> property will be used.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.EasingFunction">
            <summary>
            Gets or sets the easing function to animate the series, if this property is null, the
            <see cref="P:LiveChartsCore.Chart`1.EasingFunction"/> property will be used.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis.ShowSeparatorLines">
            <summary>
            Gets or sets a value indicating whether the separator lines are visible.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.IAxis.Initialize(LiveChartsCore.Measure.AxisOrientation)">
            <summary>
            Initializes the axis for the specified orientation.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.IAxis`1">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis`1.TextBrush">
            <summary>
            Gets or sets the text brush.
            </summary>
            <value>
            The text brush.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis`1.SeparatorsBrush">
            <summary>
            Gets or sets the separators brush.
            </summary>
            <value>
            The separators brush.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.IAxis`1.Measure(LiveChartsCore.CartesianChart{`0})">
            <summary>
            Measures the axis.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.IAxis`1.GetPossibleSize(LiveChartsCore.CartesianChart{`0})">
            <summary>
            Gets the size of the possible.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="P:LiveChartsCore.Kernel.IAxis`1.DeletingTasks">
            <summary>
            Gets the deleting tasks.
            </summary>
            <value>
            The deleting tasks.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.IBarSeries`1">
            <summary>
            Defines a bar series point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IBarSeries`1.Rx">
            <summary>
            Gets or sets the rx, the radius used in the x axis to round the corners of each column in pixels.
            </summary>
            <value>
            The rx.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IBarSeries`1.Ry">
            <summary>
            Gets or sets the ry, the radius used in the y axis to round the corners of each column in pixels.
            </summary>
            <value>
            The ry.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IBarSeries`1.GroupPadding">
            <summary>
            Gets or sets the padding for each group of bars that share the same secondary coordinate.
            </summary>
            <value>
            The bar group padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IBarSeries`1.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IBarSeries`1.IgnoresBarPosition">
            <summary>
            Gets or sets a value indicating whether the bar position respects the other bars that share 
            the same <see cref="P:LiveChartsCore.Kernel.ChartPoint.SecondaryValue"/>.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Kernel.ICartesianChartView`1">
            <summary>
            Defines a Cartesian chart view, this view is able to host one or many series in a Cartesian coordinate system.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IChartView`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianChartView`1.Core">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianChartView`1.XAxes">
            <summary>
            Gets or sets the x axes.
            </summary>
            <value>
            The x axes.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianChartView`1.YAxes">
            <summary>
            Gets or sets the y axes.
            </summary>
            <value>
            The y axes.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianChartView`1.Series">
            <summary>
            Gets or sets the series to plot in the user interface.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianChartView`1.ZoomMode">
            <summary>
            Gets or sets the zoom mode.
            </summary>
            <value>
            The zoom mode.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianChartView`1.ZoomingSpeed">
            <summary>
            Gets or sets the zooming speed from 0 to 1, where 0 is the fastest and 1 the slowest.
            </summary>
            <value>
            The zooming speed.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.ICartesianChartView`1.ScaleUIPoint(System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Scales the UI point.
            </summary>
            <param name="point">The point.</param>
            <param name="xAxisIndex">Index of the x axis.</param>
            <param name="yAxisIndex">Index of the y axis.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.ICartesianSeries`1">
            <summary>
            Defines a Cartesian series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianSeries`1.ScalesXAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the X plane, the index must exist 
            in the <see cref="P:LiveChartsCore.Kernel.ICartesianChartView`1.XAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianSeries`1.ScalesYAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the Y plane, the index must exist 
            in the <see cref="P:LiveChartsCore.Kernel.ICartesianChartView`1.YAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ICartesianSeries`1.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.ICartesianSeries`1.GetBounds(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})">
            <summary>
            Gets the series bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>the series bounds</returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.ICartesianSeries`1.Measure(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})">
            <summary>
            Measures the series and schedules the draw in specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="x">The x axis.</param>
            <param name="y">The y axis.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.IChart">
            <summary>
            Defines a chart.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.MeasureWork">
            <summary>
            Gets or sets the measure work.
            </summary>
            <value>
            The measure work.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.View">
            <summary>
            Gets the chart view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.Canvas">
            <summary>
            Gets the canvas.
            </summary>
            <value>
            The canvas.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.LegendPosition">
            <summary>
            Gets the legend position.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.LegendOrientation">
            <summary>
            Gets the legend orientation.
            </summary>
            <value>
            The legend orientation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.TooltipPosition">
            <summary>
            Gets the toolTip position.
            </summary>
            <value>
            The toolTip position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChart.TooltipFindingStrategy">
            <summary>
            Gets the toolTip finding strategy.
            </summary>
            <value>
            The toolTip finding strategy.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.IChart.Update(LiveChartsCore.Kernel.ChartUpdateParams)">
            <summary>
            Updates the chart in the user interface.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Kernel.IChartLegend`1">
            <summary>
            Defines a chart legend.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.IChartLegend`1.Draw(LiveChartsCore.Chart{`0})">
            <summary>
            Draws the legend for the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.IChartTooltip`1">
            <summary>
            Defines a tool tip.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.IChartTooltip`1.Show(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.TooltipPoint},LiveChartsCore.Chart{`0})">
            <summary>
            Shows the tool tip in the specified chart.
            </summary>
            <param name="foundPoints">The found points.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.IChartTooltip`1.Hide">
            <summary>
            Hides this tool tip instance.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Kernel.IChartView">
            <summary>
            Defines a chart view
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.Core">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.BackColor">
            <summary>
            Sets the back color of the control.
            </summary>
            <value>
            The color of the back.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.ControlSize">
            <summary>
            Gets the size of the control.
            </summary>
            <value>
            The size of the control.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.DrawMargin">
            <summary>
            Gets or sets the draw margin, if this property is null, the library will calculate a margin, this margin is the distance 
            between the view bounds and the drawable area.
            </summary>
            <value>
            The draw margin.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.EasingFunction">
            <summary>
            Gets or sets the easing function, the library already provides many easing functions in the 
            LiveCharts.EasingFunction static class.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.LegendPosition">
            <summary>
            Gets or sets the legend position.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.LegendOrientation">
            <summary>
            Gets or sets the legend orientation.
            </summary>
            <value>
            The legend orientation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.TooltipPosition">
            <summary>
            Gets or sets the tooltip position.
            </summary>
            <value>
            The tooltip position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView.TooltipFindingStrategy">
            <summary>
            Gets or sets the tooltip finding strategy.
            </summary>
            <value>
            The tooltip finding strategy.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.IChartView`1">
            <summary>
            Defines a chart view.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="E:LiveChartsCore.Kernel.IChartView`1.Measuring">
            <summary>
            Occurs before the chart is measured, this is the first step before the chart updates.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Kernel.IChartView`1.UpdateStarted">
            <summary>
            Occurs when the chart started an update, just when the drawing loop started.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Kernel.IChartView`1.UpdateFinished">
            <summary>
            Occurs when a chart update finished, just when the drawing loop finished.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView`1.AutoUpdateEnaled">
            <summary>
            Gets or sets a value indicating whether the automatic updates are enabled.
            </summary>
            <value>
              <c>true</c> if automatic update are enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView`1.CoreCanvas">
            <summary>
            Gets the core canvas.
            </summary>
            <value>
            The core canvas.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView`1.Legend">
            <summary>
            Gets the legend.
            </summary>
            <value>
            The legend.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView`1.Tooltip">
            <summary>
            Gets the tooltip.
            </summary>
            <value>
            The tooltip.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IChartView`1.PointStates">
            <summary>
            Gets or sets the point states.
            </summary>
            <value>
            The point states.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.IChartView`1.ShowTooltip(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.TooltipPoint})">
            <summary>
            Shows the tool tip based on the given points.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.IChartView`1.HideTooltip">
            <summary>
            Hides the tool tip.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Kernel.IDataFactoryProvider`1">
            <summary>
            Defines adata factory provider.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.IDataFactoryProvider`1.GetProvider``1">
            <summary>
            Gets the provider.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.IDrawableSeries`1">
            <summary>
            Defines a series a chart series that has a visual representation in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.ISeries" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.Stroke">
            <summary>
            Gets or sets the stroke drawable task.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.Fill">
            <summary>
            Gets or sets the fill  drawable task.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.DataLabelsDrawableTask">
            <summary>
            Gets or sets the data labels  drawable task.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.DataLabelsSize">
            <summary>
            Gets or sets the size of the data labels.
            </summary>
            <value>
            The size of the data labels.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.DataLabelsPadding">
            <summary>
            Gets or sets the data labels padding.
            </summary>
            <value>
            The data labels padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.DefaultPaintContext">
            <summary>
            Gets the default paint context, normally handled internally to display tooltips and legends.
            </summary>
            <value>
            The default paint context.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.IDrawableSeries`1.GetStackGroup">
            <summary>
            Gets the stack group, normally used internally to handled the stacked series.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LiveChartsCore.Kernel.IDrawableSeries`1.DeletingTasks">
            <summary>
            Gets the deleting tasks.
            </summary>
            <value>
            The deleting tasks.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.IGaugeBuilder`1">
            <summary>
            Defines a gauge builder
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.InnerRadius">
            <summary>
            Gets or sets the inner radius.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.OffsetRadius">
            <summary>
            Gets or sets the offset radius, the separation between each gauge if multiple gauges are nested.
            </summary>
            <value>
            The relative inner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.MaxRadialColumnWidth">
            <summary>
            Gets or sets the maximum width of the radial column.
            </summary>
            <value>
            The maximum width of the radial column.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.RadialAlign">
            <summary>
            Gets or sets the radial align.
            </summary>
            <value>
            The radial align.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.BackgroundInnerRadius">
            <summary>
            Gets or sets the background inner radius.
            </summary>
            <value>
            The background inner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.BackgroundOffsetRadius">
            <summary>
            Gets or sets the background offset radius, the separation between each gauge if multiple gauges are nested.
            </summary>
            <value>
            The background relative inner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.BackgroundMaxRadialColumnWidth">
            <summary>
            Gets or sets the width of the background maximum radial column.
            </summary>
            <value>
            The width of the background maximum radial column.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.BackgroundCornerRadius">
            <summary>
            Gets or sets the background corner radius.
            </summary>
            <value>
            The background corner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.LabelsSize">
            <summary>
            Gets or sets the size of the labels.
            </summary>
            <value>
            The size of the labels.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.LabelsPosition">
            <summary>
            Gets or sets the labels position.
            </summary>
            <value>
            The labels position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IGaugeBuilder`1.LabelFormatter">
            <summary>
            Gets or sets the label formatter.
            </summary>
            <value>
            The label formatter.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.ILineSeries`1">
            <summary>
            Defines a line series plot.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.ILineSeries`1.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ILineSeries`1.LineSmoothness">
            <summary>
            Gets or sets the line smoothness, where 0 is a straight line, and 1 the most curved line, default is 0.65
            </summary>
            <value>
            The line smoothness.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ILineSeries`1.EnableNullSplitting">
            <summary>
            Gets or sets a value indicating whether the line should split every null point, 
            enabling it has a performance impact, default is true.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.ILineSeries`1.GeometryFill">
            <summary>
            Gets or sets the geometry fill.
            </summary>
            <value>
            The shapes fill.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.ILineSeries`1.GeometryStroke">
            <summary>
            Gets or sets the geometry stroke.
            </summary>
            <value>
            The shapes stroke.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.IPieChartView`1">
            <summary>
            Defines a pie chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IChartView`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieChartView`1.Core">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieChartView`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieChartView`1.InitialRotation">
            <summary>
            Gets or sets the initial rotation in degrees, this angle specifies where the first pie slice will be drawn, then the remaining
            slices will stack according to its corresponding position.
            </summary>
            <value>
            The initial rotation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieChartView`1.MaxAngle">
            <summary>
            Gets or sets the maximum angle in degrees, default is 360.
            </summary>
            <value>
            The maximum angle.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieChartView`1.Total">
            <summary>
            Gets or sets the total, it is the maximum value a pie slice can represent, when this property is null, the <see cref="P:LiveChartsCore.Kernel.IPieChartView`1.Total"/> property
            will be calculated automatically based on the series data. Default value is null.
            </summary>
            <value>
            The total stacked.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.IPieSeries`1">
            <summary>
            Defines a pie series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.Pushout">
            <summary>
            Gets or sets the push out, it is the distance in pixels between the center of the control and the pie slice.
            </summary>
            <value>
            The push out.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.InnerRadius">
            <summary>
            Gets or sets the inner radius of the slice in pixels.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.MaxOuterRadius">
            <summary>
            Gets or sets the maximum outer, the value goes from 0 to 1, where 1 is the full available radius and 0 is none.
            </summary>
            <value>
            The maximum outer radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.HoverPushout">
            <summary>
            Gets or sets the hover push out in pixes, it defines the <see cref="P:LiveChartsCore.Kernel.IPieSeries`1.Pushout"/> where the pointer is over the slice.
            </summary>
            <value>
            The hover pus hout.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.CornerRadius">
            <summary>
            Gets or sets the corner radius for every pie slice in the series.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.InvertedCornerRadius">
            <summary>
            Gets or sets a value indicating whether the direction of the corner radius is inverted.
            </summary>
            <value>
              <c>true</c> if the direction is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.MaxRadialColumnWidth">
            <summary>
            Gets or sets the maximum width of the radial column, if the width of the radial column slice exceeds this dimension the radial
            column width will be capped to the value of this property, default value is double.MaxValue.
            </summary>
            <value>
            The maximum width of the radial column.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.RadialAlign">
            <summary>
            Gets or sets the radial align, this property determines the alignment of the pie slice only when the width of the column
            exceeds <see cref="P:LiveChartsCore.Kernel.IPieSeries`1.MaxRadialColumnWidth"/>.
            </summary>
            <value>
            The radial align.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.RelativeInnerRadius">
            <summary>
            Gets or sets the relative inner radius, it is the extra inner radius for every stacked slice.
            </summary>
            <value>
            The inner padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.RelativeOuterRadius">
            <summary>
            Gets or sets the relative outer radius, it is the decrement in the outer radius for every stacked slice.
            </summary>
            <value>
            The inner padding.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IPieSeries`1.IsFillSeries">
            <summary>
            Gets or sets a value indicating whether this instance is a fill series, a fill series is a dummy series that will create a 360 degrees
            pie slice, this series is normally used to set a background for pie charts, specially useful o create gauges.
            </summary>
            <value>
              <c>true</c> if this instance is fill series; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.IPieSeries`1.GetBounds(LiveChartsCore.PieChart{`0})">
            <summary>
            Gets the series bounds.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.IPieSeries`1.Measure(LiveChartsCore.PieChart{`0})">
            <summary>
            Measures the series and schedules the draw in specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:LiveChartsCore.Kernel.IScatterSeries`1">
            <summary>
            Defines a scatter series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IScatterSeries`1.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IScatterSeries`1.MinGeometrySize">
            <summary>
            Gets or sets the minimum size of the geometry.
            </summary>
            <value>
            The minimum size of the geometry.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.IStackedBarSeries`1">
            <summary>
            Defines a stacked bar series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Kernel.IDrawableSeries`1" />
        </member>
        <member name="P:LiveChartsCore.Kernel.IStackedBarSeries`1.Rx">
            <summary>
            Gets or sets the rx, the radius used in the x axis to round the corners of each column, it goes from 0 to 1.
            </summary>
            <value>
            The rx.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IStackedBarSeries`1.Ry">
            <summary>
            Gets or sets the ry, the radius used in the y axis to round the corners of each column, it goes from 0 to 1.
            </summary>
            <value>
            The ry.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IStackedBarSeries`1.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.IStackedBarSeries`1.StackGroup">
            <summary>
            Gets or sets the stack group.
            </summary>
            <value>
            The stack group.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.LiveChartsSettings">
            <summary>
            LiveCharts global settings
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultEasingFunction">
            <summary>
            Gets or sets the default easing function.
            </summary>
            <value>
            The default easing function.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultAnimationsSpeed">
            <summary>
            Gets or sets the default animations speed.
            </summary>
            <value>
            The default animations speed.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultZoomSpeed">
            <summary>
            Gets or sets the default zoom speed.
            </summary>
            <value>
            The default zoom speed.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultZoomMode">
            <summary>
            Gets or sets the default zoom mode.
            </summary>
            <value>
            The default zoom mode.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultLegendPosition">
            <summary>
            Gets or sets the default legend position.
            </summary>
            <value>
            The default legend position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultLegendOrientation">
            <summary>
            Gets or sets the default legend orientation.
            </summary>
            <value>
            The default legend orientation.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultTooltipPosition">
            <summary>
            Gets or sets the default tooltip position.
            </summary>
            <value>
            The default tooltip position.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.DefaultTooltipFindingStrategy">
            <summary>
            Gets or sets the default tooltip finding strategy.
            </summary>
            <value>
            The default tooltip finding strategy.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.ThemeId">
            <summary>
            Gets the theme identifier.
            </summary>
            <value>
            The theme identifier.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.LiveChartsSettings.AxisProvider">
            <summary>
            Gets the axis provider.
            </summary>
            <value>
            The axis provider.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.HasMap``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})">
            <summary>
            Adds or replaces a mapping for a given type, the mapper defines how a type is mapped to a<see cref="T:LiveChartsCore.Kernel.ChartPoint"/> instance,
            then the <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> will be drawn as a point in our chart.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="mapper">The mapper.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.WithDefaultAnimationsSpeed(System.TimeSpan)">
            <summary>
            Sets the default animations speed.
            </summary>
            <param name="animationsSpeed">The animations speed.</param>
            <returns>the current settings</returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.WithDefaultEasingFunction(System.Func{System.Single,System.Single})">
            <summary>
            Withes the default easing function.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <returns>the current settings</returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.WithDefaultZoomSpeed(System.Double)">
            <summary>
            Withes the default zoom speed.
            </summary>
            <param name="speed">The speed.</param>
            <returns>the current settings</returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.WithDefaultZoomMode(LiveChartsCore.Measure.ZoomAndPanMode)">
            <summary>
            Withes the default zoom mode.
            </summary>
            <param name="zoomMode">The zoom mode.</param>
            <returns>the current settings</returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.RemoveMap``1">
            <summary>
            Removes a map from the settings.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.HasTheme``1(System.Action{LiveChartsCore.Themes.Theme{``0}})">
            <summary>
            Adds the default styles.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.GetTheme``1">
            <summary>
            Gets the styles builder.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <returns></returns>
            <exception cref="T:System.Exception">$"The type {nameof(TDrawingContext)} is not registered.</exception>
        </member>
        <member name="M:LiveChartsCore.Kernel.LiveChartsSettings.AddDefaultMappers">
            <summary>
            Enables LiveCharts to be able to plot short, int, long, float, double, decimal, short?, int?, long?, float?, double?, decimal?,
            <see cref="T:LiveChartsCore.Defaults.WeightedPoint"/>, <see cref="T:LiveChartsCore.Defaults.ObservableValue"/>, <see cref="T:LiveChartsCore.Defaults.ObservablePoint"/>, <see cref="T:LiveChartsCore.Defaults.WeightedPointF"/>,
            <see cref="T:LiveChartsCore.Defaults.ObservableValueF"/> and <see cref="T:LiveChartsCore.Defaults.ObservablePointF"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.NamedLabeler">
            <summary>
            The named labeler helper class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.NamedLabeler.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.NamedLabeler"/> class.
            </summary>
            <param name="labels">The labels.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.NamedLabeler.Function(System.Double)">
            <summary>
            Functions the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.PaintContext`1">
            <summary>
            Defines the paint context.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Kernel.PaintContext`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.PaintContext`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.PaintContext`1.PaintTasksSchedule">
            <summary>
            Gets or sets the paint tasks schedule.
            </summary>
            <value>
            The paint tasks schedule.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.PaintTaskSchedule`1">
            <summary>
            Defines a schedule to be drawn by an <see cref="T:LiveChartsCore.Drawing.IDrawableTask`1"/> instance.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.PaintTaskSchedule`1.#ctor(LiveChartsCore.Drawing.IDrawableTask{`0},System.Collections.Generic.HashSet{LiveChartsCore.Drawing.IDrawable{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.PaintTaskSchedule`1"/> class.
            </summary>
            <param name="task">The task.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.PaintTaskSchedule`1.#ctor(LiveChartsCore.Drawing.IDrawableTask{`0},LiveChartsCore.Drawing.IDrawable{`0}[])">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.PaintTaskSchedule`1"/> class.
            </summary>
            <param name="task">The task.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.PaintTaskSchedule`1.DrawableTask">
            <summary>
            Gets or sets the drawable task.
            </summary>
            <value>
            The drawable task.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.PaintTaskSchedule`1.Geometries">
            <summary>
            Gets or sets the geometries.
            </summary>
            <value>
            The geometries.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.PointStatesDictionary`1">
            <summary>
            Defines the points states dictionary class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Kernel.PointStatesDictionary`1.Item(System.String)">
            <summary>
            Gets or sets the stroke and fill for the specified state name.
            </summary>
            <value>
            The stroke and fill.
            </value>
            <param name="stateName">Name of the state.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">$"A null instance is not valid at this point, to delete a key please use the {nameof(DeleteState)}() method.</exception>
        </member>
        <member name="P:LiveChartsCore.Kernel.PointStatesDictionary`1.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>
            The chart.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.PointStatesDictionary`1.GetStates">
            <summary>
            Gets the states.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.PointStatesDictionary`1.WithState(System.String,LiveChartsCore.Drawing.IDrawableTask{`0},LiveChartsCore.Drawing.IDrawableTask{`0})">
            <summary>
            Add the visual state for the given key.
            </summary>
            <param name="key">The key.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.PointStatesDictionary`1.DeleteState(System.String)">
            <summary>
            Deletes the state.
            </summary>
            <param name="stateName">Name of the state.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.PointStatesDictionary`1.RemoveState(LiveChartsCore.Kernel.StrokeAndFillDrawable{`0})">
            <summary>
            Removes the state.
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.RectangleHoverArea">
            <summary>
            Defines a rectangle hover area.
            </summary>
            <seealso cref="T:LiveChartsCore.Kernel.HoverArea" />
        </member>
        <member name="P:LiveChartsCore.Kernel.RectangleHoverArea.X">
            <summary>
            Gets or sets the x location.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.RectangleHoverArea.Y">
            <summary>
            Gets or sets the y location.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.RectangleHoverArea.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.RectangleHoverArea.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.RectangleHoverArea.SetDimensions(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the area dimensions.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.RectangleHoverArea.IsTriggerBy(System.Drawing.PointF,LiveChartsCore.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.RectangleHoverArea.IsTriggerBy(System.Drawing.PointF,LiveChartsCore.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:LiveChartsCore.Kernel.RectangleHoverArea.SuggestTooltipPlacement(LiveChartsCore.Kernel.TooltipPlacementContext)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.RectangleHoverArea.SuggestTooltipPlacement(LiveChartsCore.Kernel.TooltipPlacementContext)"/>
        </member>
        <member name="T:LiveChartsCore.Kernel.SemicircleHoverArea">
            <summary>
            Defines a semicircle hover area.
            </summary>
            <seealso cref="T:LiveChartsCore.Kernel.HoverArea" />
        </member>
        <member name="P:LiveChartsCore.Kernel.SemicircleHoverArea.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x coordinate.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.SemicircleHoverArea.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y coordinate.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.SemicircleHoverArea.StartAngle">
            <summary>
            Gets or sets the start angle in degrees.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.SemicircleHoverArea.EndAngle">
            <summary>
            Gets or sets the and angle in degrees.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.SemicircleHoverArea.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.SemicircleHoverArea.SetDimensions(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the area dimensions.
            </summary>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
            <param name="startAngle">The start angle.</param>
            <param name="endAngle">The end angle.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SemicircleHoverArea.IsTriggerBy(System.Drawing.PointF,LiveChartsCore.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.SemicircleHoverArea.IsTriggerBy(System.Drawing.PointF,LiveChartsCore.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:LiveChartsCore.Kernel.SemicircleHoverArea.SuggestTooltipPlacement(LiveChartsCore.Kernel.TooltipPlacementContext)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.SemicircleHoverArea.SuggestTooltipPlacement(LiveChartsCore.Kernel.TooltipPlacementContext)"/>
        </member>
        <member name="T:LiveChartsCore.Kernel.SeriesContext`1">
            <summary>
            Defines a series context.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.#ctor(System.Collections.Generic.IEnumerable{LiveChartsCore.Kernel.IDrawableSeries{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.SeriesContext`1"/> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetColumnPostion(LiveChartsCore.Kernel.IDrawableSeries{`0})">
            <summary>
            Gets the column position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetColumnSeriesCount">
            <summary>
            Gets the column series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetRowPostion(LiveChartsCore.Kernel.IDrawableSeries{`0})">
            <summary>
            Gets the row position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetRowSeriesCount">
            <summary>
            Gets the row series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetStackedColumnPostion(LiveChartsCore.Kernel.IDrawableSeries{`0})">
            <summary>
            Gets the stacked column position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetStackedColumnSeriesCount">
            <summary>
            Gets the stacked column series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetStackedRowPostion(LiveChartsCore.Kernel.IDrawableSeries{`0})">
            <summary>
            Gets the stacked row position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetStackedRowSeriesCount">
            <summary>
            Gets the stacked row series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.SeriesContext`1.GetStackPosition(LiveChartsCore.Kernel.IDrawableSeries{`0},System.Int32)">
            <summary>
            Gets the stack position.
            </summary>
            <param name="series">The series.</param>
            <param name="stackGroup">The stack group.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.SeriesProperties">
            <summary>
            Defines the series properties enumeration.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.AllSeries">
            <summary>
            includes all series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.CartesianSeries">
            <summary>
            The Cartesian series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Bar">
            <summary>
            The bar series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Line">
            <summary>
            The line series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Scatter">
            <summary>
            The scatter series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.PieSeries">
            <summary>
            The pie series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Stacked">
            <summary>
            The stacked series
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.PrimaryAxisVerticalOrientation">
            <summary>
            The vertical orientation
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.PrimaryAxisHorizontalOrientation">
            <summary>
            The horizontal orientation
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Gauge">
            <summary>
            The gauge.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.GaugeFill">
            <summary>
            The gauge fill.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Sketch">
            <summary>
            The sketch
            </summary>
        </member>
        <member name="F:LiveChartsCore.Kernel.SeriesProperties.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="T:LiveChartsCore.Kernel.SeriesStyleRule`2">
            <summary>
            Defines a series style rule.
            </summary>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Kernel.SeriesStyleRule`2.SeriesProperties">
            <summary>
            Gets or sets the series properties.
            </summary>
            <value>
            The series properties.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.SeriesStyleRule`2.Rule">
            <summary>
            Gets or sets the rule.
            </summary>
            <value>
            The rule.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.StackedValue">
            <summary>
            Defines the a stacked value.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.StackedValue.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.StackedValue.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.StackedValue.Total">
            <summary>
            Gets or sets the total stacked.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.Stacker`1">
            <summary>
            Defines the stacker helper class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.Stacker`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.Stacker`1"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.Stacker`1.MaxLength">
            <summary>
            Gets the maximum length.
            </summary>
            <value>
            The maximum length.
            </value>
        </member>
        <member name="M:LiveChartsCore.Kernel.Stacker`1.GetSeriesStackPosition(LiveChartsCore.Kernel.IDrawableSeries{`0})">
            <summary>
            Gets the series stack position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Stacker`1.StackPoint(LiveChartsCore.Kernel.ChartPoint,System.Int32)">
            <summary>
            Stacks the point.
            </summary>
            <param name="point">The point.</param>
            <param name="seriesStackPosition">The series stack position.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Kernel.Stacker`1.GetStack(LiveChartsCore.Kernel.ChartPoint,System.Int32)">
            <summary>
            Gets the stack.
            </summary>
            <param name="point">The point.</param>
            <param name="seriesStackPosition">The series stack position.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Kernel.StrokeAndFillDrawable`1">
            <summary>
            Defines the stroke and ill drawable class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.StrokeAndFillDrawable`1.#ctor(LiveChartsCore.Drawing.IDrawableTask{`0},LiveChartsCore.Drawing.IDrawableTask{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.StrokeAndFillDrawable`1"/> class.
            </summary>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.StrokeAndFillDrawable`1.Stroke">
            <summary>
            Gets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.StrokeAndFillDrawable`1.Fill">
            <summary>
            Gets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.TooltipPlacementContext">
            <summary>
            Defines the tooltip placement context class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPlacementContext.MostTop">
            <summary>
            Gets or sets the most top.
            </summary>
            <value>
            The most top.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPlacementContext.MostBottom">
            <summary>
            Gets or sets the most bottom.
            </summary>
            <value>
            The most bottom.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPlacementContext.MostRight">
            <summary>
            Gets or sets the most right.
            </summary>
            <value>
            The most right.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPlacementContext.MostLeft">
            <summary>
            Gets or sets the most left.
            </summary>
            <value>
            The most left.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPlacementContext.PieX">
            <summary>
            Gets or sets the pie x.
            </summary>
            <value>
            The pie x.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPlacementContext.PieY">
            <summary>
            Gets or sets the pie y.
            </summary>
            <value>
            The pie y.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.TooltipPoint">
            <summary>
            Defines the tooltip point class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.TooltipPoint.#ctor(LiveChartsCore.ISeries,LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.TooltipPoint"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="point">The point.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPoint.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TooltipPoint.Point">
            <summary>
            Gets or sets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.TypedChartPoint`3">
            <summary>
            Defines a point in a chart with known visual and label types.
            </summary>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:LiveChartsCore.Kernel.TypedChartPoint`3.#ctor(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.TypedChartPoint`3"/> class.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="P:LiveChartsCore.Kernel.TypedChartPoint`3.ChartPoint">
            <summary>
            Gets the chart point.
            </summary>
            <value>
            The chart point.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TypedChartPoint`3.Visual">
            <summary>
            Gets the visual.
            </summary>
            <value>
            The visual.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.TypedChartPoint`3.Label">
            <summary>
            Gets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="T:LiveChartsCore.Kernel.DimensionalBounds">
            <summary>
            Defines bounds for both, X and Y axes.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Kernel.DimensionalBounds.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Kernel.DimensionalBounds"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.PrimaryBounds">
            <summary>
            Gets or sets the primary bounds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.SecondaryBounds">
            <summary>
            Gets or sets the secondary bounds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.TertiaryBounds">
            <summary>
            Gets or sets the tertiary bounds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.VisiblePrimaryBounds">
            <summary>
            Gets or sets the primary bounds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.VisibleSecondaryBounds">
            <summary>
            Gets or sets the secondary bounds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.VisibleTertiaryBounds">
            <summary>
            Gets or sets the tertiary bounds.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.MinDeltaPrimary">
            <summary>
            Gets or sets the minimum delta primary.
            </summary>
            <value>
            The minimum delta primary.
            </value>
        </member>
        <member name="P:LiveChartsCore.Kernel.DimensionalBounds.MinDeltaSecondary">
            <summary>
            Gets or sets the minimum delta secondary.
            </summary>
            <value>
            The minimum delta secondary.
            </value>
        </member>
        <member name="T:LiveChartsCore.Labelers">
            <summary>
            Defines common functions to build labels in a chart.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Labelers.Default">
            <summary>
            Gets the default labeler.
            </summary>
            <value>
            The default.
            </value>
        </member>
        <member name="P:LiveChartsCore.Labelers.SevenRepresentativeDigits">
            <summary>
            Gets the seven representative digits labeler.
            </summary>
            <value>
            The seven representative digits.
            </value>
        </member>
        <member name="P:LiveChartsCore.Labelers.Currency">
            <summary>
            Gets the currency labeler.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="M:LiveChartsCore.Labelers.SetDefaultLabeler(System.Func{System.Double,System.String})">
            <summary>
            Sets the default labeler.
            </summary>
            <param name="labeler">The labeler.</param>
        </member>
        <member name="M:LiveChartsCore.Labelers.FormatCurrency(System.Double,System.String,System.String,System.String)">
            <summary>
            Formats to currency.
            </summary>
            <param name="value">The value.</param>
            <param name="thousands">The thousands.</param>
            <param name="decimals">The decimals.</param>
            <param name="symbol">The symbol.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Labelers.BuildNamedLabeler(System.Collections.Generic.IList{System.String})">
            <summary>
            Builds a named labeler.
            </summary>
            <param name="labels">The labels.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.LineSeries`9">
            <summary>
            Defines the data to plot as a line.
            </summary>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.LineSeries`9"/> class.
            </summary>
            <param name="isStacked">if set to <c>true</c> [is stacked].</param>
        </member>
        <member name="P:LiveChartsCore.LineSeries`9.GeometrySize">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ILineSeries`1.GeometrySize"/>
        </member>
        <member name="P:LiveChartsCore.LineSeries`9.LineSmoothness">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ILineSeries`1.LineSmoothness"/>
        </member>
        <member name="P:LiveChartsCore.LineSeries`9.EnableNullSplitting">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ILineSeries`1.EnableNullSplitting"/>
        </member>
        <member name="P:LiveChartsCore.LineSeries`9.GeometryFill">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ILineSeries`1.GeometryFill"/>
        </member>
        <member name="P:LiveChartsCore.LineSeries`9.GeometryStroke">
            <inheritdoc cref="P:LiveChartsCore.Kernel.ILineSeries`1.GeometrySize"/>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.ICartesianSeries`1.Measure(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})" />
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.ICartesianSeries`1.GetBounds(LiveChartsCore.CartesianChart{`0},LiveChartsCore.Kernel.IAxis{`0},LiveChartsCore.Kernel.IAxis{`0})"/>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.SetDefaultPathTransitions(LiveChartsCore.Kernel.AreaHelper{`3,`4,`5,`7,`8},LiveChartsCore.Drawing.Animation)">
            <summary>
            Sets the default path transitions.
            </summary>
            <param name="areaHelper">The area helper.</param>
            <param name="defaultAnimation">The default animation.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.OnPaintContextChanged">
            <inheritdoc cref="M:LiveChartsCore.DrawableSeries`4.OnPaintContextChanged"/>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)"/>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)"/>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.Delete(LiveChartsCore.Kernel.IChartView)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.Delete(LiveChartsCore.Kernel.IChartView)"/>
        </member>
        <member name="M:LiveChartsCore.LineSeries`9.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.LiveCharts">
            <summary>
            LiveCharts global settings.
            </summary>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.IsConfigured">
            <summary>
            Gets a value indicating whether this instance is configured.
            </summary>
            <value>
              <c>true</c> if this instance is configured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.CurrentSettings">
            <summary>
            Gets the current settings.
            </summary>
            <value>
            The current settings.
            </value>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.BarSeriesHoverKey">
            <summary>
            Gets the bar series hover key.
            </summary>
            <value>
            The bar series hover key.
            </value>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.LineSeriesHoverKey">
            <summary>
            Gets the line series hover key.
            </summary>
            <value>
            The line series hover key.
            </value>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.PieSeriesHoverKey">
            <summary>
            Gets the pie series hover key.
            </summary>
            <value>
            The pie series hover key.
            </value>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.ScatterSeriesHoverKey">
            <summary>
            Gets the scatter series hover key.
            </summary>
            <value>
            The scatter series hover key.
            </value>
        </member>
        <member name="P:LiveChartsCore.LiveCharts.StackedBarSeriesHoverKey">
            <summary>
            Gets the stacked bar series hover key.
            </summary>
            <value>
            The stacked bar series hover key.
            </value>
        </member>
        <member name="F:LiveChartsCore.LiveCharts.DisableAnimations">
            <summary>
            The disable animations
            </summary>
        </member>
        <member name="M:LiveChartsCore.LiveCharts.Configure(System.Action{LiveChartsCore.Kernel.LiveChartsSettings})">
            <summary>
            Configures LiveCharts.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">$"{nameof(LiveChartsSettings)} must not be null.</exception>
        </member>
        <member name="M:LiveChartsCore.LiveCharts.HasMapFor``1(System.Action{``0,LiveChartsCore.Kernel.ChartPoint})">
            <summary>
            Defines a mapper for the given type.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="mapper">The mapper.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Measure.AxisOrientation">
            <summary>
            Defines the axis orientation.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.AxisOrientation.Unknown">
            <summary>
            The unknown orientation.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.AxisOrientation.X">
            <summary>
            The x orientation.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.AxisOrientation.Y">
            <summary>
            The y orientation.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.AxisPosition">
            <summary>
            Defines an axis position.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.AxisPosition.Start">
            <summary>
            Places the axis at the bottom for X axes and at the left for Y axes
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.AxisPosition.End">
            <summary>
            Places the axis at the top for X axes and at the right for Y axes
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.AxisTick">
            <summary>
            Defines an axis tick, the distance between every separator.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Measure.AxisTick.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:LiveChartsCore.Measure.AxisTick.Magnitude">
            <summary>
            Gets or sets the magnitude.
            </summary>
            <value>
            The magnitude.
            </value>
        </member>
        <member name="T:LiveChartsCore.Measure.Bounds">
            <summary>
            Represents the maximum and minimum values in a set.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Measure.Bounds.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:LiveChartsCore.Measure.Bounds"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Measure.Bounds.Max">
            <summary>
            Gets or sets the maximum value in the data set.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Measure.Bounds.Min">
            <summary>
            Gets or sets the minimum value in the data set.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Measure.Bounds.Delta">
            <summary>
            Gets the delta, the absolute range in the axis.
            </summary>
            <value>
            The delta.
            </value>
        </member>
        <member name="P:LiveChartsCore.Measure.Bounds.MinDelta">
            <summary>
            Gets or sets the minimum delta.
            </summary>
            <value>
            The minimum delta.
            </value>
        </member>
        <member name="M:LiveChartsCore.Measure.Bounds.AppendValue(System.Double)">
            <summary>
            Compares the current bounds with a given value,
            if the given value is greater than the current instance <see cref="P:LiveChartsCore.Measure.Bounds.Max"/> property then the given value is set at <see cref="P:LiveChartsCore.Measure.Bounds.Max"/> property,
            if the given value is less than the current instance <see cref="P:LiveChartsCore.Measure.Bounds.Min"/> property then the given value is set at <see cref="P:LiveChartsCore.Measure.Bounds.Min"/> property.
            </summary>
            <param name="value">the value to append</param>
            <returns>Whether the value affected the current bounds, true if it affected, false if did not.</returns>
        </member>
        <member name="T:LiveChartsCore.Measure.DataLabelsPosition">
            <summary>
            Defines the data labels position.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.End">
            <summary>
            Aligns the label to the end in the axis direction.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.Start">
            <summary>
            Aligns the label to the start  in the axis direction.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.Middle">
            <summary>
            Aligns the label to the middle of the axis.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.Top">
            <summary>
            Aligns the label to the top.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.Bottom">
            <summary>
            Aligns the label to the top.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.Left">
            <summary>
            Aligns the label to the left.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.DataLabelsPosition.Right">
            <summary>
            Aligns the label to the right.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.LegendOrientation">
            <summary>
            Defines the legend orientation.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendOrientation.Auto">
            <summary>
            The automatic orientation.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendOrientation.Horizontal">
            <summary>
            The horizontal orientation.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendOrientation.Vertical">
            <summary>
            The vertical orientation.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.LegendPosition">
            <summary>
            Defines the legend position enumeration.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendPosition.Hidden">
            <summary>
            The hidden position, hides the legend form the user interface.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendPosition.Top">
            <summary>
            The top position, places the legend at the top of the chart.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendPosition.Left">
            <summary>
            The left position, places the legend at the left of the chart.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendPosition.Right">
            <summary>
            The right position, places the legend at the right of the chart.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.LegendPosition.Bottom">
            <summary>
            The bottom position, places the legend at the bottom of the chart.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.Margin">
             <summary>
            Defines the margin class.
             </summary>
        </member>
        <member name="M:LiveChartsCore.Measure.Margin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Measure.Margin"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Measure.Margin.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Measure.Margin"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:LiveChartsCore.Measure.Margin.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:LiveChartsCore.Measure.Margin.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:LiveChartsCore.Measure.Margin.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>
            The right.
            </value>
        </member>
        <member name="P:LiveChartsCore.Measure.Margin.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="T:LiveChartsCore.Measure.PolarLabelsPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.PolarLabelsPosition.ChartCenter">
            <summary>
            Places the label at the center of the chart.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.PolarLabelsPosition.End">
            <summary>
            Aligns the label to the end in the axis direction.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.PolarLabelsPosition.Start">
            <summary>
            Aligns the label to the start  in the axis direction.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.PolarLabelsPosition.Middle">
            <summary>
            Aligns the label to the middle of the axis.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.RadialAlignment">
            <summary>
            Defines the radial alignment.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.RadialAlignment.Outer">
            <summary>
            Aligns the element to the outer radius.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.RadialAlignment.Center">
            <summary>
            Aligns the element to the center of the outer and inner radius.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.RadialAlignment.Inner">
            <summary>
            Aligns the element to the inner radius.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.Scaler">
            <summary>
            Defines the scaler class, this class helps to scale from the data scale to the user interface scale and vise versa.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Measure.Scaler.#ctor(System.Drawing.PointF,System.Drawing.SizeF,LiveChartsCore.Kernel.IAxis,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Measure.Scaler"/> class.
            </summary>
            <param name="drawMarginLocation">The draw margin location.</param>
            <param name="drawMarginSize">Size of the draw margin.</param>
            <param name="axis">The axis.</param>
            <param name="usePreviousScale">Indicates if the scaler should be built based on the previous known data.</param>
            <exception cref="T:System.Exception">The axis is not ready to be scaled.</exception>
        </member>
        <member name="M:LiveChartsCore.Measure.Scaler.ToPixels(System.Single)">
            <summary>
            Converts to pixels.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Measure.Scaler.ToChartValues(System.Single)">
            <summary>
            Converts to chart values.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Measure.StackPosition`1">
            <summary>
            Defines the stack position.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Measure.StackPosition`1.Stacker">
            <summary>
            Gets or sets the stacker.
            </summary>
            <value>
            The stacker.
            </value>
        </member>
        <member name="P:LiveChartsCore.Measure.StackPosition`1.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="M:LiveChartsCore.Measure.StackPosition`1.StackPoint(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Stacks the point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Measure.StackPosition`1.GetStack(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Gets the stack.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Measure.TooltipFindingStrategy">
            <summary>
            Defines the tooltip finding strategy.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipFindingStrategy.CompareAll">
            <summary>
            Compares X and Y coordinates.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipFindingStrategy.CompareOnlyX">
            <summary>
            Compares X coordinates and ignores Y.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipFindingStrategy.CompareOnlyY">
            <summary>
            Compares Y coordinates and ignores X.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.TooltipPosition">
            <summary>
            Defines the tool tip position.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipPosition.Hidden">
            <summary>
            The hidden position, tool tips will be hidden.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipPosition.Top">
            <summary>
            The top position, places the tool tip at the top of the hovered point.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipPosition.Bottom">
            <summary>
            The bottom position, places the tool tip at the bottom of the hovered point.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipPosition.Left">
            <summary>
            The left position, places the tool tip at the left of the hovered point.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipPosition.Right">
            <summary>
            The right position, places the tool tip at the right of the hovered point.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.TooltipPosition.Center">
            <summary>
            The center position, places the tool tip at the center of the hovered point.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.ZoomAndPanMode">
            <summary>
            Defines the zooming and panning mode.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.ZoomAndPanMode.None">
            <summary>
            Disables zooming and panning.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.ZoomAndPanMode.X">
            <summary>
            Zooms only in the X axis.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.ZoomAndPanMode.Y">
            <summary>
            Zooms only in the Y axis.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.ZoomAndPanMode.Both">
            <summary>
            Zooms on both axes.
            </summary>
        </member>
        <member name="T:LiveChartsCore.Measure.ZoomDirection">
            <summary>
            Defines the zooming direction.
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.ZoomDirection.ZoomIn">
            <summary>
            The zoom in
            </summary>
        </member>
        <member name="F:LiveChartsCore.Measure.ZoomDirection.ZoomOut">
            <summary>
            The zoom out
            </summary>
        </member>
        <member name="T:LiveChartsCore.Motion.FloatMotionProperty">
            <summary>
            Defines a float motion property.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Motion.FloatMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Motion.FloatMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveChartsCore.Motion.FloatMotionProperty.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Motion.FloatMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveChartsCore.Motion.FloatMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:LiveChartsCore.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:LiveChartsCore.Motion.IMotionProperty">
            <summary>
            Defines a motions property.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Motion.IMotionProperty.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveChartsCore.Motion.IMotionProperty.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:LiveChartsCore.Motion.IMotionProperty.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>
            The animation.
            </value>
        </member>
        <member name="T:LiveChartsCore.Motion.MotionProperty`1">
            <summary>
            The <see cref="T:LiveChartsCore.Motion.MotionProperty`1"/> object tracks where a property of a <see cref="T:LiveChartsCore.Drawing.Common.Animatable"/> is in a time line.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:LiveChartsCore.Motion.MotionProperty`1.fromValue">
            <summary>
            From value
            </summary>
        </member>
        <member name="F:LiveChartsCore.Motion.MotionProperty`1.toValue">
            <summary>
            To value
            </summary>
        </member>
        <member name="M:LiveChartsCore.Motion.MotionProperty`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Motion.MotionProperty`1"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:LiveChartsCore.Motion.MotionProperty`1.FromValue">
            <summary>
            Gets the value where the transition began.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Motion.MotionProperty`1.ToValue">
            <summary>
            Gets the value where the transition finished or will finish.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Motion.MotionProperty`1.Animation">
            <summary>
            Gets or sets the animation to define the transition.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Motion.MotionProperty`1.PropertyName">
            <summary>
            Gets the property name.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Motion.MotionProperty`1.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:LiveChartsCore.Motion.MotionProperty`1.SetMovement(`0,LiveChartsCore.Drawing.Common.Animatable)">
            <summary>
            Moves to he specified value.
            </summary>
            <param name="value">The value to move to.</param>
            <param name="animatable">The <see cref="T:LiveChartsCore.Drawing.IAnimatable"/> instance that is moving.</param>
        </member>
        <member name="M:LiveChartsCore.Motion.MotionProperty`1.GetMovement(LiveChartsCore.Drawing.Common.Animatable)">
            <summary>
            Gets the current movement in the <see cref="P:LiveChartsCore.Motion.MotionProperty`1.Animation"/>.
            </summary>
            <param name="animatable"></param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Motion.MotionProperty`1.OnGetMovement(System.Single)">
            <summary>
            Called to get the movement at a specific progress.
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.PieChart`1">
            <summary>
            Defines a pie chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.Chart`1" />
        </member>
        <member name="M:LiveChartsCore.PieChart`1.#ctor(LiveChartsCore.Kernel.IPieChartView{`0},System.Action{LiveChartsCore.Kernel.LiveChartsSettings},LiveChartsCore.Drawing.MotionCanvas{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.PieChart`1"/> class.
            </summary>
            <param name="view">The view.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="P:LiveChartsCore.PieChart`1.Series">
            <summary>
            Gets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveChartsCore.PieChart`1.DrawableSeries">
            <summary>
            Gets the drawable series.
            </summary>
            <value>
            The drawable series.
            </value>
        </member>
        <member name="P:LiveChartsCore.PieChart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:LiveChartsCore.PieChart`1.ValueBounds">
            <summary>
            Gets the value bounds.
            </summary>
            <value>
            The value bounds.
            </value>
        </member>
        <member name="P:LiveChartsCore.PieChart`1.IndexBounds">
            <summary>
            Gets the index bounds.
            </summary>
            <value>
            The index bounds.
            </value>
        </member>
        <member name="P:LiveChartsCore.PieChart`1.PushoutBounds">
            <summary>
            Gets the pushout bounds.
            </summary>
            <value>
            The pushout bounds.
            </value>
        </member>
        <member name="M:LiveChartsCore.PieChart`1.FindPointsNearTo(System.Drawing.PointF)">
            <summary>
            Finds the points near to the specified point.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.PieChart`1.Update(LiveChartsCore.Kernel.ChartUpdateParams)">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IChart.Update(LiveChartsCore.Kernel.ChartUpdateParams)" />
        </member>
        <member name="M:LiveChartsCore.PieChart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.PieChart`1.UpdateThrottlerUnlocked">
            <summary>
            Called when the updated the throttler is unlocked.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.PieSeries`4">
            <inheritdoc cref="T:LiveChartsCore.Kernel.IPieSeries`1" />
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.PieSeries`4"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.Pushout">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.Pushout"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.InnerRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.InnerRadius"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.MaxOuterRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.MaxOuterRadius"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.HoverPushout">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.HoverPushout"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.RelativeInnerRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.RelativeInnerRadius"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.RelativeOuterRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.RelativeOuterRadius"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.MaxRadialColumnWidth">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.MaxRadialColumnWidth"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.RadialAlign">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.RadialAlign"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.CornerRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.CornerRadius"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.InvertedCornerRadius">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.InvertedCornerRadius"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.IsFillSeries">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IPieSeries`1.IsFillSeries"/>
        </member>
        <member name="P:LiveChartsCore.PieSeries`4.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.Measure(LiveChartsCore.PieChart{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IPieSeries`1.Measure(LiveChartsCore.PieChart{`0})"/>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.GetBounds(LiveChartsCore.PieChart{`3})">
            <inheritdoc cref="M:LiveChartsCore.Kernel.IPieSeries`1.GetBounds(LiveChartsCore.PieChart{`0})"/>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.DefaultOnPointAddedToSate(`1,LiveChartsCore.Kernel.IChartView{`3})">
            <summary>
            Defines the default behavior when a point is added to a state.
            </summary>
            <param name="visual">The visual.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.DefaultOnRemovedFromState(`1,LiveChartsCore.Kernel.IChartView{`3})">
            <summary>
            Defines the default behavior when a point is removed from a state.
            </summary>
            <param name="visual">The visual.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.OnPaintContextChanged">
            <summary>
            Called when the paint context changed.
            </summary>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.GetStackGroup">
            <summary>
            GEts the stack group
            </summary>
            <returns></returns>
            <inheritdoc />
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Sets the default point transitions.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <exception cref="T:System.Exception">Unable to initialize the point instance.</exception>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="primaryScale">The primary scale.</param>
            <param name="secondaryScale">The secondary scale.</param>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.GetLabelPolarPosition(System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.SizeF,LiveChartsCore.Measure.PolarLabelsPosition)">
            <summary>
            Gets the label polar position.
            </summary>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
            <param name="radius">The radius.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
            <param name="labelSize">Size of the label.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.PieSeries`4.Delete(LiveChartsCore.Kernel.IChartView)">
            <summary>
            Deletes the point from the chart.
            </summary>
            <param name="chart"></param>
            <inheritdoc cref="M:LiveChartsCore.ISeries.Delete(LiveChartsCore.Kernel.IChartView)" />
        </member>
        <member name="T:LiveChartsCore.RowSeries`4">
            <summary>
            Defines the row series 
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.BarSeries`4" />
        </member>
        <member name="M:LiveChartsCore.RowSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.RowSeries`4"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.RowSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.CartesianSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})"/>
        </member>
        <member name="M:LiveChartsCore.RowSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.CartesianSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})"/>
        </member>
        <member name="M:LiveChartsCore.RowSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)"/>
        </member>
        <member name="M:LiveChartsCore.RowSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <inheritdoc cref="M:LiveChartsCore.Series`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)"/>
        </member>
        <member name="T:LiveChartsCore.ScatterSeries`4">
            <summary>
            Defines a scatter series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.CartesianSeries`4" />
            <seealso cref="T:LiveChartsCore.Kernel.IScatterSeries`1" />
        </member>
        <member name="M:LiveChartsCore.ScatterSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.ScatterSeries`4"/> class.
            </summary>
        </member>
        <member name="P:LiveChartsCore.ScatterSeries`4.MinGeometrySize">
            <summary>
            Gets or sets the minimum size of the geometry.
            </summary>
            <value>
            The minimum size of the geometry.
            </value>
        </member>
        <member name="P:LiveChartsCore.ScatterSeries`4.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="M:LiveChartsCore.ScatterSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.CartesianSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})"/>
        </member>
        <member name="M:LiveChartsCore.ScatterSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <inheritdoc cref="M:LiveChartsCore.ScatterSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})"/>
        </member>
        <member name="M:LiveChartsCore.ScatterSeries`4.OnPaintContextChanged">
            <inheritdoc cref="M:LiveChartsCore.ScatterSeries`4.OnPaintContextChanged"/>
        </member>
        <member name="M:LiveChartsCore.ScatterSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <inheritdoc cref="M:LiveChartsCore.ScatterSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)"/>
        </member>
        <member name="M:LiveChartsCore.ScatterSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <inheritdoc cref="M:LiveChartsCore.ScatterSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)"/>
        </member>
        <member name="T:LiveChartsCore.Series`4">
            <summary>
            Defines a series in a Cartesian chart.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.ISeries" />
            <seealso cref="T:LiveChartsCore.ISeries`1" />
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:LiveChartsCore.Series`4.subscribedTo">
            <summary>
            The subscribed to
            </summary>
        </member>
        <member name="F:LiveChartsCore.Series`4.implementsICP">
            <summary>
            The implements icp
            </summary>
        </member>
        <member name="F:LiveChartsCore.Series`4.pivot">
            <summary>
            The pivot
            </summary>
        </member>
        <member name="F:LiveChartsCore.Series`4.dataProvider">
            <summary>
            The data provider
            </summary>
        </member>
        <member name="F:LiveChartsCore.Series`4.everFetched">
            <summary>
            The ever fetched
            </summary>
        </member>
        <member name="M:LiveChartsCore.Series`4.#ctor(LiveChartsCore.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.Series`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:LiveChartsCore.Series`4.SeriesProperties">
            <inheritdoc />
        </member>
        <member name="P:LiveChartsCore.Series`4.Name">
            <inheritdoc />
        </member>
        <member name="P:LiveChartsCore.Series`4.Values">
            <summary>
            Gets or sets the data set to draw in the chart.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Series`4.Pivot">
            <inheritdoc />
        </member>
        <member name="P:LiveChartsCore.Series`4.Mapping">
            <summary>
            Gets or sets the mapping that defines how a type is mapped to a <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> instance, 
            then the <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> will be drawn as a point in the chart.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Series`4.LiveChartsCore#ISeries#SeriesId">
            <inheritdoc />
        </member>
        <member name="P:LiveChartsCore.Series`4.HoverState">
            <inheritdoc />
        </member>
        <member name="E:LiveChartsCore.Series`4.PointMeasured">
            <summary>
            Occurs when an instance of <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> is measured.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Series`4.PointCreated">
            <summary>
            Occurs when an instance of <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> is created.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Series`4.PropertyChanged">
            <summary>
            Occurs when a property changes.
            </summary>
        </member>
        <member name="E:LiveChartsCore.Series`4.Disposing">
            <inheritdoc cref="E:LiveChartsCore.ISeries.Disposing" />
        </member>
        <member name="P:LiveChartsCore.Series`4.OnPointAddedToState">
            <summary>
            Gets or sets a delegate that will be called every time a <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> instance
            is added to a state.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Series`4.OnPointRemovedFromState">
            <summary>
            Gets or sets a delegate that will be called every time a <see cref="T:LiveChartsCore.Kernel.ChartPoint"/> instance
            is removed from a state.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Series`4.ZIndex">
            <inheritdoc cref="P:LiveChartsCore.ISeries.ZIndex" />
        </member>
        <member name="P:LiveChartsCore.Series`4.TooltipLabelFormatter">
            <inheritdoc cref="P:LiveChartsCore.ISeries.TooltipLabelFormatter" />
        </member>
        <member name="P:LiveChartsCore.Series`4.DataLabelsFormatter">
            <inheritdoc cref="P:LiveChartsCore.ISeries.DataLabelsFormatter" />
        </member>
        <member name="P:LiveChartsCore.Series`4.IsVisible">
            <inheritdoc cref="P:LiveChartsCore.ISeries.IsVisible" />
        </member>
        <member name="P:LiveChartsCore.Series`4.DataPadding">
            <inheritdoc cref="P:LiveChartsCore.ISeries.DataPadding" />
        </member>
        <member name="P:LiveChartsCore.Series`4.AnimationsSpeed">
            <inheritdoc cref="P:LiveChartsCore.ISeries.AnimationsSpeed" />
        </member>
        <member name="P:LiveChartsCore.Series`4.EasingFunction">
            <inheritdoc cref="P:LiveChartsCore.ISeries.EasingFunction" />
        </member>
        <member name="M:LiveChartsCore.Series`4.GetStackGroup">
            <inheritdoc />
        </member>
        <member name="M:LiveChartsCore.Series`4.Fetch(LiveChartsCore.Kernel.IChart)">
            <inheritdoc cref="M:LiveChartsCore.ISeries.Fetch(LiveChartsCore.Kernel.IChart)"/>
        </member>
        <member name="M:LiveChartsCore.Series`4.AddPointToState(LiveChartsCore.Kernel.ChartPoint,System.String)">
            <inheritdoc />
        </member>
        <member name="M:LiveChartsCore.Series`4.RemovePointFromState(LiveChartsCore.Kernel.ChartPoint,System.String)">
            <inheritdoc />
        </member>
        <member name="M:LiveChartsCore.Series`4.RestartAnimations">
            <inheritdoc cref="M:LiveChartsCore.ISeries.RestartAnimations"/>
        </member>
        <member name="M:LiveChartsCore.Series`4.Delete(LiveChartsCore.Kernel.IChartView)">
            <inheritdoc cref="M:LiveChartsCore.ISeries.Delete(LiveChartsCore.Kernel.IChartView)"/>
        </member>
        <member name="M:LiveChartsCore.Series`4.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:LiveChartsCore.Series`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="primaryScale">The primary scale.</param>
            <param name="secondaryScale">The secondary scale.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Series`4.OnPointMeasured(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Called when a point was measured.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="M:LiveChartsCore.Series`4.OnPointCreated(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Called when a point is created.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="M:LiveChartsCore.Series`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Sets the default point transitions.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Series`4.OnAddedToState(`1,LiveChartsCore.Kernel.IChartView{`3})">
            <summary>
            Called when a point was added to a sate.
            </summary>
            <param name="visual">The visual.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Series`4.OnRemovedFromState(`1,LiveChartsCore.Kernel.IChartView{`3})">
            <summary>
            Called when a point was removed from a state.
            </summary>
            <param name="visual">The visual.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Series`4.DefaultOnPointAddedToSate(`1,LiveChartsCore.Kernel.IChartView{`3})">
            <summary>
            Defines the default behavior when a point is added to a state.
            </summary>
            <param name="visual">The visual.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Series`4.DefaultOnRemovedFromState(`1,LiveChartsCore.Kernel.IChartView{`3})">
            <summary>
            Defines the default behavior when a point is removed from a state.
            </summary>
            <param name="visual">The visual.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Series`4.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.StackedAreaSeries`9">
            <summary>
            Defines the stacked area series class.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathGeometry">The type of the path geometry.</typeparam>
            <typeparam name="TLineSegment">The type of the line segment.</typeparam>
            <typeparam name="TBezierSegment">The type of the bezier segment.</typeparam>
            <typeparam name="TMoveToCommand">The type of the move to command.</typeparam>
            <typeparam name="TPathArgs">The type of the path arguments.</typeparam>
            <seealso cref="T:LiveChartsCore.LineSeries`9" />
        </member>
        <member name="M:LiveChartsCore.StackedAreaSeries`9.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.StackedAreaSeries`9"/> class.
            </summary>
        </member>
        <member name="T:LiveChartsCore.StackedBarSeries`4">
            <summary>
            Defines the stacked bar series class.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.CartesianSeries`4" />
            <seealso cref="T:LiveChartsCore.Kernel.IStackedBarSeries`1" />
        </member>
        <member name="F:LiveChartsCore.StackedBarSeries`4.stackGroup">
            <summary>
            The stack group
            </summary>
        </member>
        <member name="M:LiveChartsCore.StackedBarSeries`4.#ctor(LiveChartsCore.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.StackedBarSeries`4"/> class.
            </summary>
            <param name="properties">The series properties.</param>
        </member>
        <member name="P:LiveChartsCore.StackedBarSeries`4.StackGroup">
            <summary>
            Gets or sets the stack group.
            </summary>
            <value>
            The stack group.
            </value>
        </member>
        <member name="P:LiveChartsCore.StackedBarSeries`4.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:LiveChartsCore.StackedBarSeries`4.Rx">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IStackedBarSeries`1.Rx"/>
        </member>
        <member name="P:LiveChartsCore.StackedBarSeries`4.Ry">
            <inheritdoc cref="P:LiveChartsCore.Kernel.IStackedBarSeries`1.Ry"/>
        </member>
        <member name="M:LiveChartsCore.StackedBarSeries`4.OnPaintContextChanged">
            <summary>
            Called when the paint context changed.
            </summary>
        </member>
        <member name="M:LiveChartsCore.StackedBarSeries`4.GetStackGroup">
            <summary>
            Gets the stack group.
            </summary>
            <returns></returns>
            <inheritdoc />
        </member>
        <member name="T:LiveChartsCore.StackedColumnSeries`4">
            <summary>
            Defines the stacked column series class.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.StackedBarSeries`4" />
        </member>
        <member name="M:LiveChartsCore.StackedColumnSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.StackedColumnSeries`4"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.StackedColumnSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <summary>
            Measures this series.
            </summary>
            <param name="chart">The chart.</param>
            <param name="secondaryAxis">The secondary axis.</param>
            <param name="primaryAxis">The primary axis.</param>
            <exception cref="T:System.NullReferenceException">Unexpected null stacker</exception>
        </member>
        <member name="M:LiveChartsCore.StackedColumnSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <summary>
            Gets the bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="secondaryAxis">The secondary axis.</param>
            <param name="primaryAxis">The primary axis.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.StackedColumnSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Sets the default point transitions.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <exception cref="T:System.Exception">Unable to initialize the point instance.</exception>
        </member>
        <member name="M:LiveChartsCore.StackedColumnSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="primaryScale">The primary scale.</param>
            <param name="secondaryScale">The secondary scale.</param>
        </member>
        <member name="T:LiveChartsCore.StackedRowSeries`4">
            <summary>
            Defines a stacked row series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:LiveChartsCore.StackedBarSeries`4" />
        </member>
        <member name="M:LiveChartsCore.StackedRowSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveChartsCore.StackedRowSeries`4"/> class.
            </summary>
        </member>
        <member name="M:LiveChartsCore.StackedRowSeries`4.Measure(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <summary>
            Measures this series.
            </summary>
            <param name="chart">The chart.</param>
            <param name="secondaryAxis">The secondary axis.</param>
            <param name="primaryAxis">The primary axis.</param>
            <exception cref="T:System.NullReferenceException">Unexpected null stacker</exception>
        </member>
        <member name="M:LiveChartsCore.StackedRowSeries`4.GetBounds(LiveChartsCore.CartesianChart{`3},LiveChartsCore.Kernel.IAxis{`3},LiveChartsCore.Kernel.IAxis{`3})">
            <summary>
            Gets the bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="secondaryAxis">The secondary axis.</param>
            <param name="primaryAxis">The primary axis.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.StackedRowSeries`4.SetDefaultPointTransitions(LiveChartsCore.Kernel.ChartPoint)">
            <summary>
            Sets the default point transitions.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <exception cref="T:System.Exception">Unable to initialize the point instance.</exception>
        </member>
        <member name="M:LiveChartsCore.StackedRowSeries`4.SoftDeletePoint(LiveChartsCore.Kernel.ChartPoint,LiveChartsCore.Measure.Scaler,LiveChartsCore.Measure.Scaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="primaryScale">The primary scale.</param>
            <param name="secondaryScale">The secondary scale.</param>
        </member>
        <member name="T:LiveChartsCore.Themes.ColorPalletes">
            <summary>
            Defines a set of predefined colors to use.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Themes.ColorPalletes.FluentDesign">
            <summary>
            Gets the fluent design colors.
            </summary>
            <value>
            The fluent design.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.ColorPalletes.MaterialDesign500">
            <summary>
            Gets the material design500 colors.
            </summary>
            <value>
            The material design500.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.ColorPalletes.MaterialDesign200">
            <summary>
            Gets the material design200 colors.
            </summary>
            <value>
            The material design200.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.ColorPalletes.MaterialDesign800">
            <summary>
            Gets the material design800 colors.
            </summary>
            <value>
            The material design800.
            </value>
        </member>
        <member name="T:LiveChartsCore.Themes.LiveChartsStylerExtensions">
            <summary>
            Defines the LiveCharts styler extensions.
            </summary>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForCharts``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IChartView{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IChartView`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForAxes``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IAxis{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IChartView`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForAnySeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IDrawableSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IDrawableSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForPieSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IPieSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IPieSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForGaugeSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IPieSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IPieSeries`1"/> objects when used as gauges.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForGaugeFillSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IPieSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IPieSeries`1"/> objects when used as gauges fills.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForLineSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.ILineSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.ILineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForStackedLineSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.ILineSeries{``0}})">
            <summary>
             Defines a style builder for tacked <see cref="T:LiveChartsCore.Kernel.ILineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForBarSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IBarSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForColumnSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IBarSeries{``0}})">
            <summary>
             Defines a style builder for vertical <see cref="T:LiveChartsCore.Kernel.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForRowSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IBarSeries{``0}})">
            <summary>
             Defines a style builder for horizontal <see cref="T:LiveChartsCore.Kernel.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForStackedBarSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IStackedBarSeries{``0}})">
            <summary>
             Defines a style builder for stacked <see cref="T:LiveChartsCore.Kernel.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForStackedColumnSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IStackedBarSeries{``0}})">
            <summary>
             Defines a style builder for stacked vertical <see cref="T:LiveChartsCore.Kernel.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForStackedRowSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IStackedBarSeries{``0}})">
            <summary>
             Defines a style builder for stacked horizontal <see cref="T:LiveChartsCore.Kernel.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.LiveChartsStylerExtensions.HasRuleForScatterSeries``1(LiveChartsCore.Themes.VisualsStyle{``0},System.Action{LiveChartsCore.Kernel.IScatterSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:LiveChartsCore.Kernel.IScatterSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="T:LiveChartsCore.Themes.Theme`1">
            <summary>
            Defines a style builder.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:LiveChartsCore.Themes.Theme`1.CurrentColors">
            <summary>
            Gets the current colors.
            </summary>
            <value>
            The current colors.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.Theme`1.Style">
            <summary>
            Gets the style.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.Theme`1.SeriesDefaultsResolver">
            <summary>
            Gets or sets the series default resolver.
            </summary>
            <value>
            The series default resolver.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.Theme`1.AxisDefaultResolver">
            <summary>
            Gets or sets the axis default resolver.
            </summary>
            <value>
            The axis default resolver.
            </value>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.WithColors(System.Drawing.Color[])">
            <summary>
            Uses the colors.
            </summary>
            <param name="colors">The colors.</param>
            <returns>The current theme instance</returns>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.WithStyle(System.Action{LiveChartsCore.Themes.VisualsStyle{`0}})">
            <summary>
            Creates a new styles builder and configures it using the given predicate.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>The current theme instance</returns>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.WithSeriesDefaultsResolver(System.Action{System.Drawing.Color[],LiveChartsCore.Kernel.IDrawableSeries{`0},System.Boolean})">
            <summary>
            Sets the series defaults resolver.
            </summary>
            <param name="resolver">The resolver.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.WithAxisDefaultsResolver(System.Action{LiveChartsCore.Kernel.IAxis{`0},System.Boolean})">
            <summary>
            Sets the axis defaults resolver.
            </summary>
            <param name="resolver">The resolver.</param>
            <returns></returns>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.GetVisualsInitializer">
            <summary>
            Gets the objects builder.
            </summary>
            <returns>The current theme instance</returns>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.ResolveSeriesDefaults(System.Drawing.Color[],LiveChartsCore.Kernel.IDrawableSeries{`0},System.Boolean)">
            <summary>
            Resolves the series defaults.
            </summary>
            <param name="colors">The colors.</param>
            <param name="series">The series.</param>
            <param name="forceApply">Forces the apply of the theme.</param>
        </member>
        <member name="M:LiveChartsCore.Themes.Theme`1.ResolveAxisDefaults(LiveChartsCore.Kernel.IAxis{`0},System.Boolean)">
            <summary>
            Resolves the axis defaults.
            </summary>
            <param name="axis">The axis.</param>
            /// <param name="forceApply">Forces the apply of the theme.</param>
        </member>
        <member name="T:LiveChartsCore.Themes.VisualsStyle`1">
            <summary>
            Defines an object that must initialize live charts visual objects, this object defines how things will 
            be drawn by default, it is highly related to themes.
            </summary>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.ChartBuilder">
            <summary>
            Gets or sets the chart builder.
            </summary>
            <value>
            The chart builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.AxisBuilder">
            <summary>
            Gets or sets the axis builder.
            </summary>
            <value>
            The axis builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.SeriesBuilder">
            <summary>
            Gets or sets the series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.PieSeriesBuilder">
            <summary>
            Gets or sets the pie series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.GaugeSeriesBuilder">
            <summary>
            Gets or sets the gauge series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.GaugeFillSeriesBuilder">
            <summary>
            Gets or sets the gauge fill series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.CartesianSeriesBuilder">
            <summary>
            Gets or sets the Cartesian series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.LineSeriesBuilder">
            <summary>
            Gets or sets the line series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.StackedLineSeriesBuilder">
            <summary>
            Gets or sets the stacked line series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.BarSeriesBuilder">
            <summary>
            Gets or sets the bar series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.ColumnSeriesBuilder">
            <summary>
            Gets or sets the column series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.RowSeriesBuilder">
            <summary>
            Gets or sets the row series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.StackedBarSeriesBuilder">
            <summary>
            Gets or sets the stacked bar series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.StackedColumnSeriesBuilder">
            <summary>
            Gets or sets the stacked column series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.StackedRowSeriesBuilder">
            <summary>
            Gets or sets the stacked row series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:LiveChartsCore.Themes.VisualsStyle`1.ScatterSeriesBuilder">
            <summary>
            Gets or sets the scatter series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="M:LiveChartsCore.Themes.VisualsStyle`1.ApplyStyleToChart(LiveChartsCore.Kernel.IChartView{`0})">
            <summary>
            Constructs a chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveChartsCore.Themes.VisualsStyle`1.ApplyStyleToAxis(LiveChartsCore.Kernel.IAxis{`0})">
            <summary>
            Constructs an axis.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:LiveChartsCore.Themes.VisualsStyle`1.ApplyStyleToSeries(LiveChartsCore.Kernel.IDrawableSeries{`0})">
            <summary>
            Constructs a series.
            </summary>
            <param name="series">The series.</param>
        </member>
    </members>
</doc>
